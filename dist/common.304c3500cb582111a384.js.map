{"version":3,"file":"common.304c3500cb582111a384.js","mappings":"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","sources":["webpack://dev-challenge/./src/components/Modal.js","webpack://dev-challenge/./src/utils/statistics.js","webpack://dev-challenge/./src/utils/storage.js","webpack://dev-challenge/./src/components/Chart.js","webpack://dev-challenge/./src/components/CalculatorModal.js"],"sourcesContent":["/**\n * Base Modal Component\n * Provides backdrop, animations, and accessibility features\n * \n * @class Modal\n * @param {Object} options - Configuration options for the modal\n * @param {boolean} options.closeOnBackdrop - Whether to close on backdrop click\n * @param {boolean} options.closeOnEscape - Whether to close on escape key\n * @param {boolean} options.focusTrap - Whether to trap focus within modal\n * @param {number} options.animationDuration - Animation duration in milliseconds\n */\nexport class Modal {\n  /**\n   * Create a modal instance\n   * @param {Object} options - Configuration options\n   */\n  constructor(options = {}) {\n    this.options = {\n      closeOnBackdrop: true,\n      closeOnEscape: true,\n      focusTrap: true,\n      animationDuration: 300,\n      ...options\n    };\n    \n    this.isOpen = false;\n    this.previousActiveElement = null;\n    this.firstFocusableElement = null;\n    this.lastFocusableElement = null;\n    \n    this.init();\n  }\n\n  /**\n   * Initialize modal DOM structure and setup\n   * @private\n   */\n  init() {\n    // Create modal structure\n    this.backdrop = document.createElement('div');\n    this.backdrop.className = 'modal-backdrop fixed inset-0 bg-black bg-opacity-0 hidden z-40 transition-opacity duration-300';\n    \n    this.container = document.createElement('div');\n    this.container.className = 'modal-container fixed inset-0 flex items-center justify-center p-4 z-50 hidden';\n    \n    this.modal = document.createElement('div');\n    this.modal.className = 'modal bg-white dark:bg-gray-800 rounded-lg shadow-2xl max-w-2xl w-full max-h-[90vh] overflow-auto transform scale-95 opacity-0 transition-all duration-300';\n    this.modal.setAttribute('role', 'dialog');\n    this.modal.setAttribute('aria-modal', 'true');\n    \n    this.container.appendChild(this.modal);\n    document.body.appendChild(this.backdrop);\n    document.body.appendChild(this.container);\n    \n    this.setupEventListeners();\n  }\n\n  setupEventListeners() {\n    // Backdrop click\n    if (this.options.closeOnBackdrop) {\n      this.backdrop.addEventListener('click', () => this.close());\n      this.container.addEventListener('click', (e) => {\n        if (e.target === this.container) this.close();\n      });\n    }\n    \n    // Escape key\n    if (this.options.closeOnEscape) {\n      document.addEventListener('keydown', (e) => {\n        if (e.key === 'Escape' && this.isOpen) {\n          this.close();\n        }\n      });\n    }\n    \n    // Focus trap\n    if (this.options.focusTrap) {\n      document.addEventListener('keydown', (e) => {\n        if (e.key === 'Tab' && this.isOpen) {\n          this.handleTabKey(e);\n        }\n      });\n    }\n  }\n\n  handleTabKey(e) {\n    const focusableElements = this.modal.querySelectorAll(\n      'a[href], button:not([disabled]), textarea:not([disabled]), input:not([disabled]), select:not([disabled]), [tabindex]:not([tabindex=\"-1\"])'\n    );\n    \n    if (focusableElements.length === 0) return;\n    \n    this.firstFocusableElement = focusableElements[0];\n    this.lastFocusableElement = focusableElements[focusableElements.length - 1];\n    \n    if (e.shiftKey) {\n      if (document.activeElement === this.firstFocusableElement) {\n        e.preventDefault();\n        this.lastFocusableElement.focus();\n      }\n    } else {\n      if (document.activeElement === this.lastFocusableElement) {\n        e.preventDefault();\n        this.firstFocusableElement.focus();\n      }\n    }\n  }\n\n  setContent(content) {\n    if (typeof content === 'string') {\n      this.modal.innerHTML = content;\n    } else if (content instanceof HTMLElement) {\n      this.modal.innerHTML = '';\n      this.modal.appendChild(content);\n    }\n  }\n\n  open() {\n    if (this.isOpen) return;\n    \n    this.isOpen = true;\n    this.previousActiveElement = document.activeElement;\n    \n    // Show elements\n    this.backdrop.classList.remove('hidden');\n    this.container.classList.remove('hidden');\n    \n    // Force reflow\n    this.backdrop.offsetHeight;\n    \n    // Animate in\n    requestAnimationFrame(() => {\n      this.backdrop.classList.add('bg-opacity-50');\n      this.modal.classList.remove('scale-95', 'opacity-0');\n      this.modal.classList.add('scale-100', 'opacity-100');\n      \n      // Set focus to first focusable element\n      setTimeout(() => {\n        const focusableElements = this.modal.querySelectorAll(\n          'a[href], button:not([disabled]), textarea:not([disabled]), input:not([disabled]), select:not([disabled]), [tabindex]:not([tabindex=\"-1\"])'\n        );\n        if (focusableElements.length > 0) {\n          focusableElements[0].focus();\n        } else {\n          this.modal.focus();\n        }\n      }, this.options.animationDuration);\n    });\n    \n    // Prevent body scroll\n    document.body.style.overflow = 'hidden';\n  }\n\n  close() {\n    if (!this.isOpen) return;\n    \n    this.isOpen = false;\n    \n    // Animate out\n    this.backdrop.classList.remove('bg-opacity-50');\n    this.modal.classList.add('scale-95', 'opacity-0');\n    this.modal.classList.remove('scale-100', 'opacity-100');\n    \n    setTimeout(() => {\n      this.backdrop.classList.add('hidden');\n      this.container.classList.add('hidden');\n      \n      // Restore focus\n      if (this.previousActiveElement) {\n        this.previousActiveElement.focus();\n      }\n      \n      // Restore body scroll\n      document.body.style.overflow = '';\n    }, this.options.animationDuration);\n  }\n\n  destroy() {\n    this.backdrop.remove();\n    this.container.remove();\n  }\n}","/**\n * Calculate the median (middle value) of a set of numbers\n * @param {number[]} numbers - Array of numbers\n * @returns {number} The median value\n */\nexport function calculateMedian(numbers) {\n    if (!numbers || numbers.length === 0) return 0;\n    \n    const sorted = [...numbers].sort((a, b) => a - b);\n    const middle = Math.floor(sorted.length / 2);\n    \n    if (sorted.length % 2 === 0) {\n        return (sorted[middle - 1] + sorted[middle]) / 2;\n    }\n    return sorted[middle];\n}\n\n/**\n * Calculate the sample variance of a set of numbers\n * @param {number[]} numbers - Array of numbers\n * @returns {number} The sample variance\n */\nexport function calculateVariance(numbers) {\n    if (!numbers || numbers.length === 0) return 0;\n    if (numbers.length === 1) return 0; // No variance with single data point\n    \n    const mean = numbers.reduce((sum, num) => sum + num, 0) / numbers.length;\n    const squaredDifferences = numbers.map(num => Math.pow(num - mean, 2));\n    \n    // Use sample variance (n-1) for better statistical accuracy with small datasets\n    return squaredDifferences.reduce((sum, diff) => sum + diff, 0) / (numbers.length - 1);\n}\n\n/**\n * Calculate the range (difference between max and min) of a set of numbers\n * @param {number[]} numbers - Array of numbers\n * @returns {number} The range value\n */\nexport function calculateRange(numbers) {\n    if (!numbers || numbers.length === 0) return 0;\n    \n    const min = Math.min(...numbers);\n    const max = Math.max(...numbers);\n    return max - min;\n}\n\n/**\n * Calculate the standard deviation of a set of numbers\n * @param {number[]} numbers - Array of numbers\n * @returns {number} The standard deviation\n */\nexport function calculateStandardDeviation(numbers) {\n    if (!numbers || numbers.length === 0) return 0;\n    \n    return Math.sqrt(calculateVariance(numbers));\n}\n\n/**\n * Calculate the sum of a set of numbers\n * @param {number[]} numbers - Array of numbers\n * @returns {number} The sum of all numbers\n */\nexport function calculateSum(numbers) {\n    if (!numbers || numbers.length === 0) return 0;\n    return numbers.reduce((sum, num) => sum + num, 0);\n}\n\n/**\n * Get the count of numbers in the array\n * @param {number[]} numbers - Array of numbers\n * @returns {number} The count of numbers\n */\nexport function calculateCount(numbers) {\n    return numbers ? numbers.length : 0;\n}\n\n/**\n * Format a number for display with specified decimal places\n * @param {number|string} value - The value to format\n * @param {number} decimals - Number of decimal places (default: 2)\n * @returns {string} Formatted number string\n */\nexport function formatNumber(value, decimals = 2) {\n    if (value === null || value === undefined) return 'N/A';\n    if (typeof value !== 'number') return value.toString();\n    \n    return new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: decimals\n    }).format(value);\n}\n\nexport function calculateAllStats(numbers) {\n    if (!numbers || numbers.length === 0) {\n        return {\n            average: 0,\n            median: 0,\n            variance: 0,\n            range: 0,\n            standardDeviation: 0,\n            sum: 0,\n            count: 0\n        };\n    }\n\n    return {\n        average: calculateSum(numbers) / numbers.length,\n        median: calculateMedian(numbers),\n        variance: calculateVariance(numbers),\n        range: calculateRange(numbers),\n        standardDeviation: calculateStandardDeviation(numbers),\n        sum: calculateSum(numbers),\n        count: calculateCount(numbers)\n    };\n}","const STORAGE_KEY = 'meanmachine_calculations';\nconst MAX_HISTORY_ITEMS = 10;\n\nexport function saveCalculation(calculationData) {\n    try {\n        const history = getCalculationHistory();\n        \n        const newCalculation = {\n            id: Date.now(),\n            timestamp: new Date().toISOString(),\n            numbers: [...calculationData.numbers],\n            results: { ...calculationData.results },\n            inputType: calculationData.inputType || 'custom'\n        };\n        \n        history.unshift(newCalculation);\n        \n        if (history.length > MAX_HISTORY_ITEMS) {\n            history.splice(MAX_HISTORY_ITEMS);\n        }\n        \n        localStorage.setItem(STORAGE_KEY, JSON.stringify(history));\n        return newCalculation;\n    } catch (error) {\n        console.error('Failed to save calculation:', error);\n        return null;\n    }\n}\n\nexport function getCalculationHistory() {\n    try {\n        const stored = localStorage.getItem(STORAGE_KEY);\n        return stored ? JSON.parse(stored) : [];\n    } catch (error) {\n        console.error('Failed to load calculation history:', error);\n        return [];\n    }\n}\n\nexport function clearHistory() {\n    try {\n        localStorage.removeItem(STORAGE_KEY);\n        return true;\n    } catch (error) {\n        console.error('Failed to clear history:', error);\n        return false;\n    }\n}\n\nexport function getCalculationById(id) {\n    const history = getCalculationHistory();\n    return history.find(calc => calc.id === id);\n}\n\nexport function formatTimestamp(timestamp) {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n    \n    if (diffInMinutes < 1) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n    \n    return date.toLocaleDateString();\n}","/**\n * Simple Chart Component for visualizing numbers and average\n * Uses SVG for lightweight, responsive charts\n */\nexport class Chart {\n  constructor(container, options = {}) {\n    this.container = container;\n    this.options = {\n      width: 400,\n      height: 200,\n      margin: { top: 20, right: 20, bottom: 40, left: 40 },\n      barColor: '#3b82f6',\n      averageLineColor: '#ef4444',\n      animationDuration: 800,\n      ...options\n    };\n    \n    this.svg = null;\n    this.data = [];\n  }\n\n  render(numbers, average) {\n    this.data = numbers.map((value, index) => ({ index, value }));\n    this.average = average;\n    \n    // Clear previous chart\n    this.container.innerHTML = '';\n    \n    // Create SVG\n    this.svg = this.createSVG();\n    this.container.appendChild(this.svg);\n    \n    // Calculate scales\n    const maxValue = Math.max(...numbers, average);\n    const minValue = Math.min(...numbers, average);\n    const padding = (maxValue - minValue) * 0.1 || 1;\n    const yMax = maxValue + padding;\n    const yMin = Math.max(0, minValue - padding);\n    \n    this.yScale = (value) => {\n      const chartHeight = this.options.height - this.options.margin.top - this.options.margin.bottom;\n      return chartHeight - ((value - yMin) / (yMax - yMin)) * chartHeight;\n    };\n    \n    this.xScale = (index) => {\n      const chartWidth = this.options.width - this.options.margin.left - this.options.margin.right;\n      const barWidth = chartWidth / numbers.length;\n      return index * barWidth + barWidth / 2;\n    };\n    \n    // Draw chart elements\n    this.drawAxes(yMin, yMax);\n    this.drawBars();\n    this.drawAverageLine();\n    this.drawLabels();\n  }\n\n  createSVG() {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('width', this.options.width);\n    svg.setAttribute('height', this.options.height);\n    svg.setAttribute('viewBox', `0 0 ${this.options.width} ${this.options.height}`);\n    svg.setAttribute('class', 'chart-svg');\n    svg.style.overflow = 'visible';\n    \n    return svg;\n  }\n\n  drawAxes(yMin, yMax) {\n    const g = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    g.setAttribute('class', 'axes');\n    \n    // Y-axis\n    const yAxis = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n    yAxis.setAttribute('x1', this.options.margin.left);\n    yAxis.setAttribute('y1', this.options.margin.top);\n    yAxis.setAttribute('x2', this.options.margin.left);\n    yAxis.setAttribute('y2', this.options.height - this.options.margin.bottom);\n    yAxis.setAttribute('stroke', 'currentColor');\n    yAxis.setAttribute('stroke-width', '1');\n    yAxis.setAttribute('opacity', '0.3');\n    g.appendChild(yAxis);\n    \n    // X-axis\n    const xAxis = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n    xAxis.setAttribute('x1', this.options.margin.left);\n    xAxis.setAttribute('y1', this.options.height - this.options.margin.bottom);\n    xAxis.setAttribute('x2', this.options.width - this.options.margin.right);\n    xAxis.setAttribute('y2', this.options.height - this.options.margin.bottom);\n    xAxis.setAttribute('stroke', 'currentColor');\n    xAxis.setAttribute('stroke-width', '1');\n    xAxis.setAttribute('opacity', '0.3');\n    g.appendChild(xAxis);\n    \n    // Y-axis labels\n    const labelCount = 5;\n    for (let i = 0; i <= labelCount; i++) {\n      const value = yMin + (yMax - yMin) * (i / labelCount);\n      const y = this.options.margin.top + this.yScale(value);\n      \n      const label = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n      label.setAttribute('x', this.options.margin.left - 10);\n      label.setAttribute('y', y + 4);\n      label.setAttribute('text-anchor', 'end');\n      label.setAttribute('class', 'text-xs fill-current opacity-60');\n      label.textContent = value.toFixed(1);\n      g.appendChild(label);\n      \n      // Grid line\n      const gridLine = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n      gridLine.setAttribute('x1', this.options.margin.left);\n      gridLine.setAttribute('y1', y);\n      gridLine.setAttribute('x2', this.options.width - this.options.margin.right);\n      gridLine.setAttribute('y2', y);\n      gridLine.setAttribute('stroke', 'currentColor');\n      gridLine.setAttribute('stroke-width', '0.5');\n      gridLine.setAttribute('opacity', '0.1');\n      g.appendChild(gridLine);\n    }\n    \n    this.svg.appendChild(g);\n  }\n\n  drawBars() {\n    const chartWidth = this.options.width - this.options.margin.left - this.options.margin.right;\n    const barWidth = Math.max(20, (chartWidth / this.data.length) * 0.8);\n    \n    this.data.forEach((item, index) => {\n      const x = this.options.margin.left + this.xScale(index) - barWidth / 2;\n      const y = this.options.margin.top + this.yScale(item.value);\n      const height = this.options.height - this.options.margin.bottom - y;\n      \n      const bar = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n      bar.setAttribute('x', x);\n      bar.setAttribute('y', this.options.height - this.options.margin.bottom); // Start from bottom\n      bar.setAttribute('width', barWidth);\n      bar.setAttribute('height', 0); // Start with 0 height\n      bar.setAttribute('fill', this.options.barColor);\n      bar.setAttribute('rx', '2');\n      bar.setAttribute('class', 'bar');\n      \n      // Add hover effect\n      bar.addEventListener('mouseenter', () => {\n        bar.setAttribute('opacity', '0.8');\n      });\n      bar.addEventListener('mouseleave', () => {\n        bar.setAttribute('opacity', '1');\n      });\n      \n      this.svg.appendChild(bar);\n      \n      // Animate bar growth\n      setTimeout(() => {\n        bar.style.transition = `height ${this.options.animationDuration}ms ease-out, y ${this.options.animationDuration}ms ease-out`;\n        bar.setAttribute('y', y);\n        bar.setAttribute('height', height);\n      }, index * 100);\n      \n      // Add value label on top of bar\n      const label = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n      label.setAttribute('x', x + barWidth / 2);\n      label.setAttribute('y', y - 5);\n      label.setAttribute('text-anchor', 'middle');\n      label.setAttribute('class', 'text-xs fill-current font-medium');\n      label.setAttribute('opacity', '0');\n      label.textContent = item.value;\n      \n      this.svg.appendChild(label);\n      \n      // Animate label appearance\n      setTimeout(() => {\n        label.style.transition = `opacity ${this.options.animationDuration / 2}ms ease-out`;\n        label.setAttribute('opacity', '0.8');\n      }, index * 100 + this.options.animationDuration / 2);\n    });\n  }\n\n  drawAverageLine() {\n    const y = this.options.margin.top + this.yScale(this.average);\n    \n    // Average line\n    const line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n    line.setAttribute('x1', this.options.margin.left);\n    line.setAttribute('y1', y);\n    line.setAttribute('x2', this.options.width - this.options.margin.right);\n    line.setAttribute('y2', y);\n    line.setAttribute('stroke', this.options.averageLineColor);\n    line.setAttribute('stroke-width', '2');\n    line.setAttribute('stroke-dasharray', '5,5');\n    line.setAttribute('opacity', '0');\n    line.setAttribute('class', 'average-line');\n    \n    this.svg.appendChild(line);\n    \n    // Animate line appearance\n    setTimeout(() => {\n      line.style.transition = `opacity ${this.options.animationDuration}ms ease-out`;\n      line.setAttribute('opacity', '0.8');\n    }, this.data.length * 100 + this.options.animationDuration);\n    \n    // Average label\n    const label = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n    label.setAttribute('x', this.options.width - this.options.margin.right + 5);\n    label.setAttribute('y', y + 4);\n    label.setAttribute('class', 'text-xs fill-current font-semibold');\n    label.setAttribute('opacity', '0');\n    label.style.fill = this.options.averageLineColor;\n    label.textContent = `Avg: ${this.average.toFixed(2)}`;\n    \n    this.svg.appendChild(label);\n    \n    // Animate label\n    setTimeout(() => {\n      label.style.transition = `opacity ${this.options.animationDuration}ms ease-out`;\n      label.setAttribute('opacity', '1');\n    }, this.data.length * 100 + this.options.animationDuration + 200);\n  }\n\n  drawLabels() {\n    // X-axis labels (index numbers)\n    this.data.forEach((item, index) => {\n      const x = this.options.margin.left + this.xScale(index);\n      const y = this.options.height - this.options.margin.bottom + 20;\n      \n      const label = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n      label.setAttribute('x', x);\n      label.setAttribute('y', y);\n      label.setAttribute('text-anchor', 'middle');\n      label.setAttribute('class', 'text-xs fill-current opacity-60');\n      label.textContent = `#${index + 1}`;\n      \n      this.svg.appendChild(label);\n    });\n  }\n\n  destroy() {\n    if (this.container) {\n      this.container.innerHTML = '';\n    }\n  }\n}","import { Modal } from './Modal.js';\nimport { calculateAllStats, formatNumber } from '../utils/statistics.js';\nimport { saveCalculation, getCalculationHistory, formatTimestamp } from '../utils/storage.js';\nimport { Chart } from './Chart.js';\n\n/**\n * Calculator Modal Component\n * Handles number input and calculation display\n */\nexport class CalculatorModal extends Modal {\n  constructor(calculateFunction) {\n    super({\n      closeOnBackdrop: true,\n      closeOnEscape: true,\n      focusTrap: true\n    });\n    \n    this.calculateFunction = calculateFunction;\n    this.mode = 'custom'; // 'custom' or 'random'\n    this.numbers = [];\n    this.result = null;\n    this.chart = null;\n    \n    this.render();\n  }\n\n  render() {\n    const content = `\n      <div class=\"p-6\">\n        <!-- Header -->\n        <div class=\"flex items-center justify-between mb-6\">\n          <h2 class=\"text-2xl font-bold text-gray-900 dark:text-gray-100 transition-colors duration-300\" id=\"modal-title\">Average Calculator</h2>\n          <button class=\"close-btn text-gray-400 dark:text-gray-500 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-300\" aria-label=\"Close modal\">\n            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        <!-- Tab Navigation -->\n        <div class=\"flex border-b border-gray-200 dark:border-gray-600 mb-6 transition-colors duration-300\">\n          <button class=\"tab-btn px-4 py-2 font-medium text-gray-700 dark:text-gray-200 border-b-2 border-blue-500 dark:border-blue-400 focus:outline-none transition-colors duration-300\" \n                  data-tab=\"custom\" aria-selected=\"true\">\n            Custom Numbers\n          </button>\n          <button class=\"tab-btn px-4 py-2 font-medium text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 focus:outline-none transition-colors duration-300\" \n                  data-tab=\"random\" aria-selected=\"false\">\n            Random Numbers\n          </button>\n        </div>\n\n        <!-- Tab Content -->\n        <div class=\"tab-content\">\n          <!-- Custom Numbers Tab -->\n          <div id=\"custom-tab\" class=\"tab-panel\">\n            <div class=\"mb-4\">\n              <p class=\"text-sm text-gray-600 dark:text-gray-400 mb-4 transition-colors duration-300\">Enter numbers to calculate their average (2-10 numbers)</p>\n              <div id=\"number-inputs\" class=\"space-y-3\">\n                ${this.createNumberInput(0)}\n                ${this.createNumberInput(1)}\n              </div>\n              <div class=\"mt-3 flex items-center gap-4\">\n                <button id=\"add-input\" class=\"text-sm text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 focus:outline-none transition-colors duration-300\">\n                  + Add another number\n                </button>\n                <button id=\"clear-inputs\" class=\"text-sm text-red-600 dark:text-red-400 hover:text-red-700 dark:hover:text-red-300 focus:outline-none transition-colors duration-300\">\n                  Clear all\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <!-- Random Numbers Tab -->\n          <div id=\"random-tab\" class=\"tab-panel hidden\">\n            <div class=\"space-y-4\">\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 transition-colors duration-300\">\n                  How many numbers?\n                </label>\n                <input type=\"range\" id=\"random-count\" min=\"2\" max=\"10\" value=\"5\" \n                       class=\"w-full h-2 bg-gray-200 dark:bg-gray-600 rounded-lg appearance-none cursor-pointer transition-colors duration-300\">\n                <div class=\"flex justify-between text-xs text-gray-500 dark:text-gray-400 mt-1 transition-colors duration-300\">\n                  <span>2</span>\n                  <span id=\"count-display\" class=\"font-medium text-gray-700 dark:text-gray-300 transition-colors duration-300\">5</span>\n                  <span>10</span>\n                </div>\n              </div>\n              \n              <div class=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 transition-colors duration-300\">\n                    Min Value\n                  </label>\n                  <input type=\"number\" id=\"random-min\" value=\"1\" \n                         class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-blue-500 dark:focus:border-blue-400 transition-colors duration-300\">\n                </div>\n                <div>\n                  <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 transition-colors duration-300\">\n                    Max Value\n                  </label>\n                  <input type=\"number\" id=\"random-max\" value=\"100\" \n                         class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-blue-500 dark:focus:border-blue-400 transition-colors duration-300\">\n                </div>\n              </div>\n              \n            </div>\n          </div>\n        </div>\n\n        <!-- Result Display -->\n        <div id=\"result-display\" class=\"hidden mt-6\">\n          <!-- Input Numbers Display -->\n          <div class=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n            <p class=\"text-sm text-gray-600 mb-2\">Your numbers:</p>\n            <div id=\"number-pills\" class=\"flex flex-wrap gap-2\"></div>\n          </div>\n\n          <!-- Results Tab Navigation -->\n          <div class=\"flex border-b border-gray-200 mb-4\">\n            <button class=\"result-tab-btn px-4 py-2 font-medium text-gray-700 border-b-2 border-blue-500 focus:outline-none transition-colors\" \n                    data-result-tab=\"overview\" aria-selected=\"true\">\n              Overview\n            </button>\n            <button class=\"result-tab-btn px-4 py-2 font-medium text-gray-500 hover:text-gray-700 focus:outline-none transition-colors\" \n                    data-result-tab=\"statistics\" aria-selected=\"false\">\n              Statistics\n            </button>\n            <button class=\"result-tab-btn px-4 py-2 font-medium text-gray-500 hover:text-gray-700 focus:outline-none transition-colors\" \n                    data-result-tab=\"history\" aria-selected=\"false\">\n              History\n            </button>\n          </div>\n\n          <!-- Results Tab Content -->\n          <div class=\"result-tab-content\">\n            <!-- Overview Tab -->\n            <div id=\"overview-tab\" class=\"result-tab-panel\">\n              <div class=\"text-center p-6 bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-lg transition-colors duration-300\">\n                <p class=\"text-sm text-gray-600 dark:text-gray-300 mb-2 transition-colors duration-300\">Average</p>\n                <div id=\"result-value\" class=\"text-5xl font-bold text-blue-600 dark:text-blue-300 mb-4 transition-colors duration-300\">0</div>\n                <div class=\"grid grid-cols-2 gap-4 mt-6 text-sm\">\n                  <div class=\"text-center\">\n                    <p class=\"text-gray-500 dark:text-gray-300 transition-colors duration-300\">Sum</p>\n                    <p id=\"sum-value\" class=\"font-semibold text-gray-700 dark:text-gray-200 transition-colors duration-300\">0</p>\n                  </div>\n                  <div class=\"text-center\">\n                    <p class=\"text-gray-500 dark:text-gray-300 transition-colors duration-300\">Count</p>\n                    <p id=\"count-value\" class=\"font-semibold text-gray-700 dark:text-gray-200 transition-colors duration-300\">0</p>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- Chart Visualization -->\n              <div class=\"mt-6 p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg transition-colors duration-300\">\n                <h3 class=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-3 text-center transition-colors duration-300\">Data Visualization</h3>\n                <div id=\"chart-container\" class=\"flex justify-center items-center min-h-[200px] text-gray-900 dark:text-gray-100 transition-colors duration-300\">\n                  <!-- Chart will be rendered here -->\n                </div>\n              </div>\n            </div>\n\n            <!-- Statistics Tab -->\n            <div id=\"statistics-tab\" class=\"result-tab-panel hidden\">\n              <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div class=\"stat-card p-4 bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-900/30 dark:to-emerald-900/30 rounded-lg transition-colors duration-300\">\n                  <div class=\"flex items-center justify-between mb-2\">\n                    <h3 class=\"font-medium text-gray-700 dark:text-gray-200 transition-colors duration-300\">Median</h3>\n                    <span class=\"tooltip-trigger text-gray-400 dark:text-gray-500 cursor-help transition-colors duration-300\" data-tooltip=\"The middle value when numbers are sorted\">ⓘ</span>\n                  </div>\n                  <p id=\"median-value\" class=\"text-2xl font-bold text-green-600 dark:text-green-400 transition-colors duration-300\">0</p>\n                </div>\n                \n                <div class=\"stat-card p-4 bg-gradient-to-br from-purple-50 to-violet-50 dark:from-purple-900/30 dark:to-violet-900/30 rounded-lg transition-colors duration-300\">\n                  <div class=\"flex items-center justify-between mb-2\">\n                    <h3 class=\"font-medium text-gray-700 dark:text-gray-200 transition-colors duration-300\">Variance</h3>\n                    <span class=\"tooltip-trigger text-gray-400 dark:text-gray-500 cursor-help transition-colors duration-300\" data-tooltip=\"Sample variance: average squared deviation from mean (s²)\">ⓘ</span>\n                  </div>\n                  <p id=\"variance-value\" class=\"text-2xl font-bold text-purple-600 dark:text-purple-400 transition-colors duration-300\">0</p>\n                </div>\n                \n                <div class=\"stat-card p-4 bg-gradient-to-br from-orange-50 to-amber-50 dark:from-orange-900/30 dark:to-amber-900/30 rounded-lg transition-colors duration-300\">\n                  <div class=\"flex items-center justify-between mb-2\">\n                    <h3 class=\"font-medium text-gray-700 dark:text-gray-200 transition-colors duration-300\">Range</h3>\n                    <span class=\"tooltip-trigger text-gray-400 dark:text-gray-500 cursor-help transition-colors duration-300\" data-tooltip=\"The difference between the highest and lowest values\">ⓘ</span>\n                  </div>\n                  <p id=\"range-value\" class=\"text-2xl font-bold text-orange-600 dark:text-orange-400 transition-colors duration-300\">0</p>\n                </div>\n                \n                <div class=\"stat-card p-4 bg-gradient-to-br from-red-50 to-rose-50 dark:from-red-900/30 dark:to-rose-900/30 rounded-lg transition-colors duration-300\">\n                  <div class=\"flex items-center justify-between mb-2\">\n                    <h3 class=\"font-medium text-gray-700 dark:text-gray-200 transition-colors duration-300\">Std. Deviation</h3>\n                    <span class=\"tooltip-trigger text-gray-400 dark:text-gray-500 cursor-help transition-colors duration-300\" data-tooltip=\"A measure of how spread out the numbers are\">ⓘ</span>\n                  </div>\n                  <p id=\"stddev-value\" class=\"text-2xl font-bold text-red-600 dark:text-red-400 transition-colors duration-300\">0</p>\n                </div>\n              </div>\n            </div>\n\n            <!-- History Tab -->\n            <div id=\"history-tab\" class=\"result-tab-panel hidden\">\n              <div class=\"flex items-center justify-between mb-4\">\n                <h3 class=\"font-medium text-gray-700 dark:text-gray-300 transition-colors duration-300\">Recent Calculations</h3>\n                <button id=\"clear-history\" class=\"text-sm text-red-600 dark:text-red-400 hover:text-red-700 dark:hover:text-red-300 focus:outline-none transition-colors duration-300\">\n                  Clear History\n                </button>\n              </div>\n              <div id=\"history-list\" class=\"space-y-2 max-h-60 overflow-y-auto custom-scrollbar\">\n                <!-- History items will be populated here -->\n              </div>\n            </div>\n          </div>\n\n          <!-- Action Buttons -->\n          <div class=\"flex gap-3 justify-center mt-6\">\n            <button id=\"calculate-again\" class=\"px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500 transition-colors\">\n              Calculate Again\n            </button>\n            <button id=\"copy-result\" class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors\">\n              Copy Result\n            </button>\n          </div>\n\n          <!-- Tooltip -->\n          <div id=\"tooltip\" class=\"hidden absolute bg-gray-800 dark:bg-gray-900 text-white text-xs rounded px-2 py-1 pointer-events-none z-50 shadow-lg\"></div>\n        </div>\n\n        <!-- Error Display -->\n        <div id=\"error-display\" class=\"hidden mt-4 p-4 bg-red-50 dark:bg-red-900/30 border border-red-200 dark:border-red-700 rounded-md transition-colors duration-300\">\n          <p class=\"text-sm text-red-600 dark:text-red-400 transition-colors duration-300\"></p>\n        </div>\n\n        <!-- Action Buttons -->\n        <div class=\"mt-6 flex justify-end gap-3\">\n          <button id=\"cancel-btn\" class=\"px-4 py-2 text-gray-700 dark:text-gray-300 bg-gray-200 dark:bg-gray-600 rounded-md hover:bg-gray-300 dark:hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-500 dark:focus:ring-gray-400 transition-colors duration-300\">\n            Cancel\n          </button>\n          <button id=\"calculate-btn\" class=\"px-4 py-2 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-md hover:from-green-600 hover:to-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 transition-colors\">\n            Calculate Average\n          </button>\n        </div>\n      </div>\n    `;\n\n    this.setContent(content);\n    this.attachEventListeners();\n  }\n\n  createNumberInput(index) {\n    return `\n      <div class=\"flex items-center gap-2 number-input-group\">\n        <input type=\"number\" \n               class=\"number-input flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-blue-500 dark:focus:border-blue-400 transition-colors duration-300\" \n               placeholder=\"Enter a number\"\n               aria-label=\"Number ${index + 1}\">\n        ${index > 1 ? `\n          <button class=\"remove-input text-red-500 dark:text-red-400 hover:text-red-700 dark:hover:text-red-300 focus:outline-none transition-colors duration-300\" aria-label=\"Remove number\">\n            <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n            </svg>\n          </button>\n        ` : ''}\n      </div>\n    `;\n  }\n\n  attachEventListeners() {\n    // Close button\n    this.modal.querySelector('.close-btn').addEventListener('click', () => this.close());\n    this.modal.querySelector('#cancel-btn').addEventListener('click', () => this.close());\n\n    // Tab switching\n    this.modal.querySelectorAll('.tab-btn').forEach(btn => {\n      btn.addEventListener('click', (e) => this.switchTab(e.target.dataset.tab));\n    });\n\n    // Custom numbers functionality\n    this.modal.querySelector('#add-input').addEventListener('click', () => this.addNumberInput());\n    this.modal.querySelector('#clear-inputs').addEventListener('click', () => this.clearAllInputs());\n    this.modal.querySelector('#calculate-btn').addEventListener('click', () => this.calculate());\n    \n    // Random numbers functionality\n    const randomCount = this.modal.querySelector('#random-count');\n    const countDisplay = this.modal.querySelector('#count-display');\n    randomCount.addEventListener('input', (e) => {\n      countDisplay.textContent = e.target.value;\n    });\n    \n    \n    // Result tabs\n    this.modal.querySelectorAll('.result-tab-btn').forEach(btn => {\n      btn.addEventListener('click', (e) => this.switchResultTab(e.target.dataset.resultTab));\n    });\n\n    // Result actions\n    this.modal.querySelector('#calculate-again').addEventListener('click', () => this.reset());\n    this.modal.querySelector('#copy-result').addEventListener('click', () => this.copyResult());\n    this.modal.querySelector('#clear-history').addEventListener('click', () => this.clearHistory());\n\n    // Tooltip functionality\n    this.modal.addEventListener('mouseenter', (e) => {\n      if (e.target.classList.contains('tooltip-trigger')) {\n        this.showTooltip(e.target, e.target.dataset.tooltip);\n      }\n    }, true);\n    \n    this.modal.addEventListener('mouseleave', (e) => {\n      if (e.target.classList.contains('tooltip-trigger')) {\n        this.hideTooltip();\n      }\n    }, true);\n\n    // Dynamic event delegation for remove buttons\n    this.modal.addEventListener('click', (e) => {\n      if (e.target.closest('.remove-input')) {\n        this.removeNumberInput(e.target.closest('.number-input-group'));\n      }\n    });\n\n    // Real-time validation\n    this.modal.addEventListener('input', (e) => {\n      if (e.target.classList.contains('number-input')) {\n        this.validateInput(e.target);\n      }\n    });\n  }\n\n  switchTab(tab) {\n    this.mode = tab;\n    \n    // Update tab buttons\n    this.modal.querySelectorAll('.tab-btn').forEach(btn => {\n      if (btn.dataset.tab === tab) {\n        btn.classList.add('text-gray-700', 'dark:text-gray-200', 'border-b-2', 'border-blue-500', 'dark:border-blue-400');\n        btn.classList.remove('text-gray-500', 'dark:text-gray-400');\n        btn.setAttribute('aria-selected', 'true');\n      } else {\n        btn.classList.remove('text-gray-700', 'dark:text-gray-200', 'border-b-2', 'border-blue-500', 'dark:border-blue-400');\n        btn.classList.add('text-gray-500', 'dark:text-gray-400');\n        btn.setAttribute('aria-selected', 'false');\n      }\n    });\n\n    // Make sure tab content is visible first\n    const tabContent = this.modal.querySelector('.tab-content');\n    if (tabContent.classList.contains('hidden')) {\n      tabContent.classList.remove('hidden');\n    }\n\n    // Update tab panels\n    const customTab = this.modal.querySelector('#custom-tab');\n    const randomTab = this.modal.querySelector('#random-tab');\n    \n    if (tab === 'custom') {\n      customTab.classList.remove('hidden');\n      randomTab.classList.add('hidden');\n    } else {\n      customTab.classList.add('hidden');\n      randomTab.classList.remove('hidden');\n    }\n\n    // Update button text and visibility based on tab\n    const calculateBtn = this.modal.querySelector('#calculate-btn');\n    calculateBtn.classList.remove('hidden');\n    \n    if (tab === 'custom') {\n      calculateBtn.textContent = 'Calculate Average';\n    } else {\n      calculateBtn.textContent = 'Generate & Calculate Average';\n    }\n\n    this.hideError();\n    this.hideResult();\n  }\n\n  addNumberInput() {\n    const container = this.modal.querySelector('#number-inputs');\n    const inputCount = container.querySelectorAll('.number-input-group').length;\n    \n    if (inputCount >= 10) {\n      this.showError('Maximum 10 numbers allowed');\n      return;\n    }\n\n    const div = document.createElement('div');\n    div.innerHTML = this.createNumberInput(inputCount);\n    container.appendChild(div.firstElementChild);\n    \n    // Focus new input\n    const newInput = container.lastElementChild.querySelector('input');\n    newInput.focus();\n  }\n\n  removeNumberInput(inputGroup) {\n    const container = this.modal.querySelector('#number-inputs');\n    const inputCount = container.querySelectorAll('.number-input-group').length;\n    \n    if (inputCount <= 2) {\n      this.showError('Minimum 2 numbers required');\n      return;\n    }\n\n    inputGroup.remove();\n  }\n\n  clearAllInputs() {\n    const inputs = this.modal.querySelectorAll('.number-input');\n    inputs.forEach(input => {\n      input.value = '';\n      input.classList.remove('border-red-500');\n    });\n    this.hideError();\n    \n    // Reset the internal state\n    this.numbers = [];\n    this.result = null;\n    \n    // Reset to just 2 inputs\n    const container = this.modal.querySelector('#number-inputs');\n    const inputGroups = container.querySelectorAll('.number-input-group');\n    \n    // Remove all inputs beyond the first 2\n    inputGroups.forEach((group, index) => {\n      if (index > 1) {\n        group.remove();\n      }\n    });\n  }\n\n  validateInput(input) {\n    const value = input.value;\n    if (value && isNaN(value)) {\n      input.classList.add('border-red-500');\n      this.showError('Please enter valid numbers only');\n    } else {\n      input.classList.remove('border-red-500');\n      this.hideError();\n    }\n  }\n\n  generateRandomNumbers() {\n    const count = parseInt(this.modal.querySelector('#random-count').value);\n    const min = parseInt(this.modal.querySelector('#random-min').value);\n    const max = parseInt(this.modal.querySelector('#random-max').value);\n\n    if (min >= max) {\n      this.showError('Maximum value must be greater than minimum value');\n      return;\n    }\n\n    this.numbers = [];\n    for (let i = 0; i < count; i++) {\n      this.numbers.push(Math.floor(Math.random() * (max - min + 1)) + min);\n    }\n\n    this.displayResult();\n  }\n\n  calculate() {\n    const calculateBtn = this.modal.querySelector('#calculate-btn');\n    \n    // Add button press animation\n    calculateBtn.classList.add('animate-button-press');\n    setTimeout(() => calculateBtn.classList.remove('animate-button-press'), 150);\n    \n    // Show loading state\n    const originalText = calculateBtn.textContent;\n    calculateBtn.disabled = true;\n    calculateBtn.innerHTML = `\n      <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n        <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n      </svg>\n      Calculating...\n    `;\n\n    // Simulate brief calculation delay for better UX\n    setTimeout(() => {\n      if (this.mode === 'custom') {\n        const inputs = this.modal.querySelectorAll('.number-input');\n        this.numbers = [];\n        \n        inputs.forEach(input => {\n          if (input.value.trim()) {\n            const num = parseFloat(input.value);\n            if (!isNaN(num)) {\n              this.numbers.push(num);\n            }\n          }\n        });\n\n        if (this.numbers.length < 2) {\n          calculateBtn.disabled = false;\n          calculateBtn.textContent = originalText;\n          this.showError('Please enter at least 2 numbers');\n          return;\n        }\n      } else {\n        // Random mode - generate numbers first, then calculate\n        this.generateRandomNumbers();\n        return; // generateRandomNumbers() will call displayResult()\n      }\n\n      this.displayResult();\n    }, 500); // Brief delay for loading effect\n  }\n\n  displayResult() {\n    try {\n      // Calculate all statistics\n      const stats = calculateAllStats(this.numbers);\n      this.result = stats.average;\n      this.allStats = stats;\n      \n      // Save to history\n      saveCalculation({\n        numbers: this.numbers,\n        results: stats,\n        inputType: this.mode\n      });\n      \n      // Hide input section\n      this.modal.querySelector('.tab-content').classList.add('hidden');\n      this.modal.querySelector('#calculate-btn').classList.add('hidden');\n      \n      // Show result\n      const resultDisplay = this.modal.querySelector('#result-display');\n      resultDisplay.classList.remove('hidden');\n      \n      // Always switch to Overview tab when showing new results\n      this.switchResultTab('overview');\n      \n      // Show number pills\n      const pillsContainer = this.modal.querySelector('#number-pills');\n      pillsContainer.innerHTML = this.numbers.map(num => \n        `<span class=\"px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm\">${formatNumber(num)}</span>`\n      ).join('');\n      \n      // Populate all result values\n      this.populateResults(stats);\n      \n      // Animate the main average number\n      this.animateNumber(stats.average);\n      \n      // Create chart visualization (delay to ensure tab is switched)\n      setTimeout(() => {\n        this.renderChart(this.numbers, stats.average);\n      }, 100);\n      \n      // Load history for history tab\n      this.loadHistory();\n      \n    } catch (error) {\n      this.showError(error.message);\n    }\n  }\n\n  animateNumber(target) {\n    const element = this.modal.querySelector('#result-value');\n    const duration = 1500;\n    const start = 0;\n    let startTime = null;\n\n    // Add morphing animation class\n    element.classList.add('animate-numberMorph');\n\n    const animate = (timestamp) => {\n      if (!startTime) startTime = timestamp;\n      const elapsed = timestamp - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n\n      // Use easing function for smoother animation\n      const easeOutQuart = 1 - Math.pow(1 - progress, 4);\n      const current = start + (target - start) * easeOutQuart;\n\n      element.textContent = current.toFixed(2);\n\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      } else {\n        element.textContent = target.toFixed(2);\n        element.classList.remove('animate-numberMorph');\n        \n        // Add celebration animation\n        element.classList.add('animate-celebrate');\n        setTimeout(() => {\n          element.classList.remove('animate-celebrate');\n          this.triggerConfetti();\n        }, 600);\n      }\n    };\n\n    requestAnimationFrame(animate);\n  }\n\n  triggerConfetti() {\n    // Create confetti particles\n    const confettiCount = 50;\n    const colors = ['#059669', '#3b82f6', '#8b5cf6', '#f59e0b', '#ef4444'];\n    \n    for (let i = 0; i < confettiCount; i++) {\n      const confetti = document.createElement('div');\n      confetti.className = 'confetti';\n      confetti.style.left = Math.random() * 100 + 'vw';\n      confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];\n      confetti.style.animationDelay = Math.random() * 2 + 's';\n      confetti.style.animationDuration = (Math.random() * 2 + 2) + 's';\n      \n      document.body.appendChild(confetti);\n      \n      // Remove confetti after animation\n      setTimeout(() => {\n        if (confetti.parentNode) {\n          confetti.parentNode.removeChild(confetti);\n        }\n      }, 4000);\n    }\n  }\n\n  reset() {\n    // Show input section\n    this.modal.querySelector('.tab-content').classList.remove('hidden');\n    const calculateBtn = this.modal.querySelector('#calculate-btn');\n    calculateBtn.classList.remove('hidden');\n    \n    // Reset calculate button state\n    calculateBtn.disabled = false;\n    calculateBtn.textContent = this.mode === 'custom' ? 'Calculate Average' : 'Generate & Calculate Average';\n    \n    // Hide result\n    this.modal.querySelector('#result-display').classList.add('hidden');\n    \n    // Don't clear the inputs - let users keep their numbers\n    // Just remove any validation errors\n    if (this.mode === 'custom') {\n      this.modal.querySelectorAll('.number-input').forEach(input => {\n        input.classList.remove('border-red-500');\n      });\n    }\n    \n    // Don't reset numbers array or result here - keep them for reference\n    this.hideError();\n  }\n\n  copyResult() {\n    if (this.result !== null && this.allStats) {\n      let textToCopy = '';\n      \n      // Get the current active result tab\n      const activeTab = this.modal.querySelector('.result-tab-btn[aria-selected=\"true\"]');\n      const currentTab = activeTab ? activeTab.dataset.resultTab : 'overview';\n      \n      switch (currentTab) {\n        case 'overview':\n          textToCopy = `Average: ${formatNumber(this.result)}`;\n          break;\n          \n        case 'statistics':\n          textToCopy = `Statistics for [${this.numbers.map(n => formatNumber(n)).join(', ')}]:\nAverage: ${formatNumber(this.allStats.average)}\nMedian: ${formatNumber(this.allStats.median)}\nVariance: ${formatNumber(this.allStats.variance)}\nRange: ${formatNumber(this.allStats.range)}\nStandard Deviation: ${formatNumber(this.allStats.standardDeviation)}\nSum: ${formatNumber(this.allStats.sum)}\nCount: ${this.allStats.count}`;\n          break;\n          \n        case 'history':\n          const history = getCalculationHistory();\n          if (history.length > 0) {\n            textToCopy = `Calculation History:\\n${history.map(calc => \n              `Numbers: [${calc.numbers.map(n => formatNumber(n)).join(', ')}] → Average: ${formatNumber(calc.results.average)} (${formatTimestamp(calc.timestamp)})`\n            ).join('\\n')}`;\n          } else {\n            textToCopy = 'No calculation history available';\n          }\n          break;\n          \n        default:\n          textToCopy = `Average: ${formatNumber(this.result)}`;\n      }\n      \n      navigator.clipboard.writeText(textToCopy).then(() => {\n        const btn = this.modal.querySelector('#copy-result');\n        const originalText = btn.textContent;\n        btn.textContent = 'Copied!';\n        btn.classList.add('bg-green-600', 'hover:bg-green-700');\n        \n        setTimeout(() => {\n          btn.textContent = originalText;\n          btn.classList.remove('bg-green-600', 'hover:bg-green-700');\n        }, 2000);\n      });\n    }\n  }\n\n  showError(message) {\n    const errorDisplay = this.modal.querySelector('#error-display');\n    errorDisplay.querySelector('p').textContent = message;\n    errorDisplay.classList.remove('hidden');\n  }\n\n  hideError() {\n    this.modal.querySelector('#error-display').classList.add('hidden');\n  }\n\n  hideResult() {\n    this.modal.querySelector('#result-display').classList.add('hidden');\n  }\n\n  switchResultTab(tab) {\n    // Update tab buttons\n    this.modal.querySelectorAll('.result-tab-btn').forEach(btn => {\n      if (btn.dataset.resultTab === tab) {\n        btn.classList.add('text-gray-700', 'dark:text-gray-200', 'border-b-2', 'border-blue-500', 'dark:border-blue-400');\n        btn.classList.remove('text-gray-500', 'dark:text-gray-400');\n        btn.setAttribute('aria-selected', 'true');\n      } else {\n        btn.classList.remove('text-gray-700', 'dark:text-gray-200', 'border-b-2', 'border-blue-500', 'dark:border-blue-400');\n        btn.classList.add('text-gray-500', 'dark:text-gray-400');\n        btn.setAttribute('aria-selected', 'false');\n      }\n    });\n\n    // Update tab panels\n    this.modal.querySelectorAll('.result-tab-panel').forEach(panel => {\n      if (panel.id === `${tab}-tab`) {\n        panel.classList.remove('hidden');\n      } else {\n        panel.classList.add('hidden');\n      }\n    });\n  }\n\n  populateResults(stats) {\n    // Overview tab\n    this.modal.querySelector('#sum-value').textContent = formatNumber(stats.sum);\n    this.modal.querySelector('#count-value').textContent = stats.count;\n    \n    // Force update overview text colors for dark mode with a small delay\n    setTimeout(() => {\n      const isDark = document.documentElement.classList.contains('dark');\n      if (isDark) {\n        // More specific selectors for overview tab elements\n        const overviewTab = this.modal.querySelector('#overview-tab');\n        if (overviewTab) {\n          // Average label\n          const avgLabel = overviewTab.querySelector('p.text-sm');\n          if (avgLabel) {\n            avgLabel.classList.remove('text-gray-600', 'dark:text-gray-400');\n            avgLabel.classList.add('text-gray-300');\n          }\n          \n          // Main average value\n          const avgValue = this.modal.querySelector('#result-value');\n          if (avgValue) {\n            avgValue.classList.remove('text-blue-600', 'dark:text-blue-400');\n            avgValue.classList.add('text-blue-300');\n          }\n          \n          // Sum and Count labels and values\n          const summaryGrid = overviewTab.querySelector('.grid');\n          if (summaryGrid) {\n            const labels = summaryGrid.querySelectorAll('p.text-gray-500');\n            const values = summaryGrid.querySelectorAll('p.font-semibold');\n            \n            labels.forEach(label => {\n              label.classList.remove('text-gray-500', 'dark:text-gray-400');\n              label.classList.add('text-gray-300');\n            });\n            \n            values.forEach(value => {\n              value.classList.remove('text-gray-700', 'dark:text-gray-300');\n              value.classList.add('text-gray-200');\n            });\n          }\n        }\n      }\n    }, 50);\n    \n    // Statistics tab - with staggered animations\n    const statCards = this.modal.querySelectorAll('.stat-card');\n    const statElements = [\n      { element: this.modal.querySelector('#median-value'), value: formatNumber(stats.median) },\n      { element: this.modal.querySelector('#variance-value'), value: formatNumber(stats.variance) },\n      { element: this.modal.querySelector('#range-value'), value: formatNumber(stats.range) },\n      { element: this.modal.querySelector('#stddev-value'), value: formatNumber(stats.standardDeviation) }\n    ];\n\n    statElements.forEach((stat, index) => {\n      setTimeout(() => {\n        stat.element.textContent = stat.value;\n        \n        // Add pulse glow effect\n        const card = stat.element.closest('.stat-card');\n        card.classList.add('animate-pulse-glow');\n        \n        setTimeout(() => {\n          card.classList.remove('animate-pulse-glow');\n        }, 2000);\n      }, index * 200); // Stagger by 200ms\n    });\n  }\n\n  loadHistory() {\n    const history = getCalculationHistory();\n    const historyList = this.modal.querySelector('#history-list');\n    \n    if (history.length === 0) {\n      historyList.innerHTML = '<p class=\"text-gray-500 text-center py-4\">No calculations yet</p>';\n      return;\n    }\n\n    historyList.innerHTML = history.map(calc => `\n      <div class=\"history-item p-3 bg-gray-50 dark:bg-gray-700/70 rounded-lg cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-600/80 transition-colors duration-300\" \n           data-calculation-id=\"${calc.id}\">\n        <div class=\"flex justify-between items-start\">\n          <div class=\"flex-1\">\n            <div class=\"flex flex-wrap gap-1 mb-1\">\n              ${calc.numbers.slice(0, 5).map(num => \n                `<span class=\"text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/70 text-blue-600 dark:text-blue-200 rounded transition-colors duration-300\">${formatNumber(num)}</span>`\n              ).join('')}\n              ${calc.numbers.length > 5 ? `<span class=\"text-xs text-gray-500 dark:text-gray-300 transition-colors duration-300\">+${calc.numbers.length - 5} more</span>` : ''}\n            </div>\n            <p class=\"text-sm font-medium text-gray-700 dark:text-gray-100 transition-colors duration-300\">Avg: ${formatNumber(calc.results.average)}</p>\n          </div>\n          <div class=\"text-right\">\n            <p class=\"text-xs text-gray-500 dark:text-gray-300 transition-colors duration-300\">${formatTimestamp(calc.timestamp)}</p>\n            <p class=\"text-xs text-gray-400 dark:text-gray-400 capitalize transition-colors duration-300\">${calc.inputType}</p>\n          </div>\n        </div>\n      </div>\n    `).join('');\n\n    // Add click handlers for history items\n    historyList.addEventListener('click', (e) => {\n      const historyItem = e.target.closest('.history-item');\n      if (historyItem) {\n        const calcId = parseInt(historyItem.dataset.calculationId);\n        this.loadFromHistory(calcId);\n      }\n    });\n  }\n\n  loadFromHistory(calcId) {\n    const history = getCalculationHistory();\n    const calculation = history.find(calc => calc.id === calcId);\n    \n    if (!calculation) return;\n\n    // Set the numbers and mode\n    this.numbers = [...calculation.numbers];\n    this.mode = calculation.inputType;\n    this.allStats = calculation.results;\n    this.result = calculation.results.average;\n\n    // Update the display\n    this.populateResults(calculation.results);\n    \n    // Update number pills\n    const pillsContainer = this.modal.querySelector('#number-pills');\n    pillsContainer.innerHTML = this.numbers.map(num => \n      `<span class=\"px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm\">${formatNumber(num)}</span>`\n    ).join('');\n    \n    // Update main average display\n    this.modal.querySelector('#result-value').textContent = formatNumber(calculation.results.average);\n    \n    // Re-render chart\n    this.renderChart(this.numbers, calculation.results.average);\n    \n    // Switch to overview tab\n    this.switchResultTab('overview');\n  }\n\n  clearHistory() {\n    if (confirm('Are you sure you want to clear all calculation history?')) {\n      const success = getCalculationHistory().length > 0;\n      if (success) {\n        localStorage.removeItem('meanmachine_calculations');\n        this.loadHistory();\n      }\n    }\n  }\n\n  showTooltip(trigger, text) {\n    const tooltip = this.modal.querySelector('#tooltip');\n    tooltip.textContent = text;\n    tooltip.classList.remove('hidden');\n    tooltip.classList.add('animate-tooltip-appear');\n    \n    const rect = trigger.getBoundingClientRect();\n    const modalRect = this.modal.getBoundingClientRect();\n    \n    tooltip.style.left = `${rect.left - modalRect.left + rect.width / 2}px`;\n    tooltip.style.top = `${rect.top - modalRect.top - tooltip.offsetHeight - 5}px`;\n    tooltip.style.transform = 'translateX(-50%)';\n  }\n\n  hideTooltip() {\n    const tooltip = this.modal.querySelector('#tooltip');\n    tooltip.classList.remove('animate-tooltip-appear');\n    tooltip.classList.add('hidden');\n  }\n\n  renderChart(numbers, average) {\n    const chartContainer = this.modal.querySelector('#chart-container');\n    \n    if (!chartContainer) {\n      console.warn('Chart container not found');\n      return;\n    }\n    \n    // Clear previous chart\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = null;\n    }\n    \n    // Ensure we're on the overview tab or wait for it\n    const overviewTab = this.modal.querySelector('#overview-tab');\n    if (!overviewTab || overviewTab.classList.contains('hidden')) {\n      // Wait a bit longer if not on overview tab\n      setTimeout(() => this.renderChart(numbers, average), 200);\n      return;\n    }\n    \n    // Create new chart with responsive sizing\n    const containerRect = chartContainer.getBoundingClientRect();\n    const containerWidth = Math.min(400, Math.max(300, containerRect.width - 20));\n    const isDark = document.documentElement.classList.contains('dark');\n    \n    this.chart = new Chart(chartContainer, {\n      width: containerWidth,\n      height: 200,\n      barColor: isDark ? '#60a5fa' : '#3b82f6', // Blue for bars\n      averageLineColor: isDark ? '#f87171' : '#ef4444', // Red for average line\n      animationDuration: 1000\n    });\n    \n    // Render the chart\n    try {\n      this.chart.render(numbers, average);\n    } catch (error) {\n      console.error('Chart rendering error:', error);\n    }\n  }\n}"],"names":["Modal","options","arguments","length","undefined","_classCallCheck","this","_objectSpread","closeOnBackdrop","closeOnEscape","focusTrap","animationDuration","isOpen","previousActiveElement","firstFocusableElement","lastFocusableElement","init","key","value","backdrop","document","createElement","className","container","modal","setAttribute","appendChild","body","setupEventListeners","_this","addEventListener","close","e","target","handleTabKey","focusableElements","querySelectorAll","shiftKey","activeElement","preventDefault","focus","content","innerHTML","HTMLElement","_this2","classList","remove","offsetHeight","requestAnimationFrame","add","setTimeout","style","overflow","_this3","calculateMedian","numbers","sorted","_toConsumableArray","sort","a","b","middle","Math","floor","calculateVariance","mean","reduce","sum","num","map","pow","diff","calculateRange","min","apply","max","calculateStandardDeviation","sqrt","calculateSum","calculateCount","formatNumber","decimals","toString","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","STORAGE_KEY","getCalculationHistory","stored","localStorage","getItem","JSON","parse","error","console","formatTimestamp","timestamp","date","Date","now","diffInMinutes","concat","toLocaleDateString","Chart","width","height","margin","top","right","bottom","left","barColor","averageLineColor","svg","data","average","index","createSVG","maxValue","minValue","padding","yMax","yMin","yScale","chartHeight","xScale","barWidth","drawAxes","drawBars","drawAverageLine","drawLabels","createElementNS","g","yAxis","xAxis","i","y","label","textContent","toFixed","gridLine","chartWidth","forEach","item","x","bar","transition","line","fill","_this4","CalculatorModal","_Modal","calculateFunction","_callSuper","mode","result","chart","render","_inherits","createNumberInput","setContent","attachEventListeners","querySelector","btn","switchTab","dataset","tab","addNumberInput","clearAllInputs","calculate","randomCount","countDisplay","switchResultTab","resultTab","reset","copyResult","clearHistory","contains","showTooltip","tooltip","hideTooltip","closest","removeNumberInput","validateInput","tabContent","customTab","randomTab","calculateBtn","hideError","hideResult","inputCount","showError","div","firstElementChild","lastElementChild","inputGroup","input","group","isNaN","count","parseInt","push","random","displayResult","originalText","disabled","inputs","trim","parseFloat","generateRandomNumbers","stats","median","variance","range","standardDeviation","allStats","calculationData","history","newCalculation","id","toISOString","results","inputType","unshift","splice","setItem","stringify","saveCalculation","join","populateResults","animateNumber","renderChart","loadHistory","message","_this5","element","startTime","animate","elapsed","progress","easeOutQuart","current","triggerConfetti","colors","_loop","confetti","backgroundColor","animationDelay","parentNode","removeChild","_this6","textToCopy","activeTab","n","calc","navigator","clipboard","writeText","then","errorDisplay","panel","_this7","documentElement","overviewTab","avgLabel","avgValue","summaryGrid","labels","values","stat","card","_this8","historyList","slice","historyItem","calcId","calculationId","loadFromHistory","calculation","find","confirm","removeItem","trigger","text","rect","getBoundingClientRect","modalRect","transform","_this9","chartContainer","destroy","containerRect","containerWidth","isDark","warn"],"sourceRoot":""}