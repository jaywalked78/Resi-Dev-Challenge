{"version":3,"file":"common.1d25cb87a931072dd9d2.js","mappings":"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","sources":["webpack://dev-challenge/./src/components/Modal.js","webpack://dev-challenge/./src/utils/statistics.js","webpack://dev-challenge/./src/utils/storage.js","webpack://dev-challenge/./src/components/Chart.js","webpack://dev-challenge/./src/components/GuessModal.js","webpack://dev-challenge/./src/utils/signature.js","webpack://dev-challenge/./src/components/CalculatorModal.js"],"sourcesContent":["/**\n * Base Modal Component\n * Provides backdrop, animations, and accessibility features\n *\n * @class Modal\n * @param {Object} options - Configuration options for the modal\n * @param {boolean} options.closeOnBackdrop - Whether to close on backdrop click\n * @param {boolean} options.closeOnEscape - Whether to close on escape key\n * @param {boolean} options.focusTrap - Whether to trap focus within modal\n * @param {number} options.animationDuration - Animation duration in milliseconds\n */\nexport class Modal {\n  /**\n   * Create a modal instance\n   * @param {Object} options - Configuration options\n   */\n  constructor(options = {}) {\n    this.options = {\n      closeOnBackdrop: true,\n      closeOnEscape: true,\n      focusTrap: true,\n      animationDuration: 300,\n      ...options,\n    };\n\n    this.isOpen = false;\n    this.previousActiveElement = null;\n    this.firstFocusableElement = null;\n    this.lastFocusableElement = null;\n\n    this.init();\n  }\n\n  /**\n   * Initialize modal DOM structure and setup\n   * @private\n   */\n  init() {\n    // Create modal structure\n    this.backdrop = document.createElement('div');\n    this.backdrop.className =\n      'modal-backdrop fixed inset-0 bg-black bg-opacity-0 hidden z-40 transition-opacity duration-300';\n\n    this.container = document.createElement('div');\n    this.container.className =\n      'modal-container fixed inset-0 flex items-center justify-center p-4 z-50 hidden';\n\n    this.modal = document.createElement('div');\n    this.modal.className =\n      'modal bg-white dark:bg-gray-800 rounded-lg shadow-2xl max-w-2xl w-full max-h-[90vh] overflow-auto transform scale-95 opacity-0 transition-all duration-300 focus:outline-none focus:ring-4 focus:ring-blue-300 focus:ring-opacity-50';\n    this.modal.setAttribute('role', 'dialog');\n    this.modal.setAttribute('aria-modal', 'true');\n    this.modal.setAttribute('aria-labelledby', 'modal-title');\n    this.modal.setAttribute('aria-describedby', 'modal-description');\n    this.modal.setAttribute('tabindex', '-1');\n\n    this.container.appendChild(this.modal);\n    document.body.appendChild(this.backdrop);\n    document.body.appendChild(this.container);\n\n    this.setupEventListeners();\n  }\n\n  setupEventListeners() {\n    // Backdrop click\n    if (this.options.closeOnBackdrop) {\n      this.backdrop.addEventListener('click', () => this.close());\n      this.container.addEventListener('click', e => {\n        if (e.target === this.container) this.close();\n      });\n    }\n\n    // Escape key\n    if (this.options.closeOnEscape) {\n      document.addEventListener('keydown', e => {\n        if (e.key === 'Escape' && this.isOpen) {\n          this.close();\n        }\n      });\n    }\n\n    // Focus trap\n    if (this.options.focusTrap) {\n      document.addEventListener('keydown', e => {\n        if (e.key === 'Tab' && this.isOpen) {\n          this.handleTabKey(e);\n        }\n      });\n    }\n  }\n\n  handleTabKey(e) {\n    const focusableElements = this.modal.querySelectorAll(\n      'a[href], button:not([disabled]), textarea:not([disabled]), input:not([disabled]), select:not([disabled]), [tabindex]:not([tabindex=\"-1\"])'\n    );\n\n    if (focusableElements.length === 0) return;\n\n    this.firstFocusableElement = focusableElements[0];\n    this.lastFocusableElement = focusableElements[focusableElements.length - 1];\n\n    if (e.shiftKey) {\n      if (document.activeElement === this.firstFocusableElement) {\n        e.preventDefault();\n        this.lastFocusableElement.focus();\n      }\n    } else {\n      if (document.activeElement === this.lastFocusableElement) {\n        e.preventDefault();\n        this.firstFocusableElement.focus();\n      }\n    }\n  }\n\n  setContent(content) {\n    if (typeof content === 'string') {\n      this.modal.innerHTML = content;\n    } else if (content instanceof HTMLElement) {\n      this.modal.innerHTML = '';\n      this.modal.appendChild(content);\n    }\n  }\n\n  open() {\n    if (this.isOpen) return;\n\n    this.isOpen = true;\n    this.previousActiveElement = document.activeElement;\n\n    // Show elements\n    this.backdrop.classList.remove('hidden');\n    this.container.classList.remove('hidden');\n\n    // Force reflow\n    this.backdrop.offsetHeight;\n\n    // Animate in\n    requestAnimationFrame(() => {\n      this.backdrop.classList.add('bg-opacity-50');\n      this.modal.classList.remove('scale-95', 'opacity-0');\n      this.modal.classList.add('scale-100', 'opacity-100');\n\n      // Set focus to first focusable element\n      setTimeout(() => {\n        const focusableElements = this.modal.querySelectorAll(\n          'a[href], button:not([disabled]), textarea:not([disabled]), input:not([disabled]), select:not([disabled]), [tabindex]:not([tabindex=\"-1\"])'\n        );\n        if (focusableElements.length > 0) {\n          focusableElements[0].focus();\n        } else {\n          this.modal.focus();\n        }\n      }, this.options.animationDuration);\n    });\n\n    // Prevent body scroll\n    document.body.style.overflow = 'hidden';\n  }\n\n  close() {\n    if (!this.isOpen) return;\n\n    this.isOpen = false;\n\n    // Animate out\n    this.backdrop.classList.remove('bg-opacity-50');\n    this.modal.classList.add('scale-95', 'opacity-0');\n    this.modal.classList.remove('scale-100', 'opacity-100');\n\n    setTimeout(() => {\n      this.backdrop.classList.add('hidden');\n      this.container.classList.add('hidden');\n\n      // Restore focus\n      if (this.previousActiveElement) {\n        this.previousActiveElement.focus();\n      }\n\n      // Restore body scroll\n      document.body.style.overflow = '';\n    }, this.options.animationDuration);\n  }\n\n  destroy() {\n    this.backdrop.remove();\n    this.container.remove();\n  }\n}\n","/**\n * Calculate the median (middle value) of a set of numbers\n * @param {number[]} numbers - Array of numbers\n * @returns {number} The median value\n */\nexport function calculateMedian(numbers) {\n  if (!numbers || numbers.length === 0) return 0;\n\n  const sorted = [...numbers].sort((a, b) => a - b);\n  const middle = Math.floor(sorted.length / 2);\n\n  if (sorted.length % 2 === 0) {\n    return (sorted[middle - 1] + sorted[middle]) / 2;\n  }\n  return sorted[middle];\n}\n\n/**\n * Calculate the sample variance of a set of numbers\n * @param {number[]} numbers - Array of numbers\n * @returns {number} The sample variance\n */\nexport function calculateVariance(numbers) {\n  if (!numbers || numbers.length === 0) return 0;\n  if (numbers.length === 1) return 0; // No variance with single data point\n\n  const mean = numbers.reduce((sum, num) => sum + num, 0) / numbers.length;\n  const squaredDifferences = numbers.map(num => Math.pow(num - mean, 2));\n\n  // Use sample variance (n-1) for better statistical accuracy with small datasets\n  return (\n    squaredDifferences.reduce((sum, diff) => sum + diff, 0) /\n    (numbers.length - 1)\n  );\n}\n\n/**\n * Calculate the range (difference between max and min) of a set of numbers\n * @param {number[]} numbers - Array of numbers\n * @returns {number} The range value\n */\nexport function calculateRange(numbers) {\n  if (!numbers || numbers.length === 0) return 0;\n\n  const min = Math.min(...numbers);\n  const max = Math.max(...numbers);\n  return max - min;\n}\n\n/**\n * Calculate the standard deviation of a set of numbers\n * @param {number[]} numbers - Array of numbers\n * @returns {number} The standard deviation\n */\nexport function calculateStandardDeviation(numbers) {\n  if (!numbers || numbers.length === 0) return 0;\n\n  return Math.sqrt(calculateVariance(numbers));\n}\n\n/**\n * Calculate the sum of a set of numbers\n * @param {number[]} numbers - Array of numbers\n * @returns {number} The sum of all numbers\n */\nexport function calculateSum(numbers) {\n  if (!numbers || numbers.length === 0) return 0;\n  return numbers.reduce((sum, num) => sum + num, 0);\n}\n\n/**\n * Get the count of numbers in the array\n * @param {number[]} numbers - Array of numbers\n * @returns {number} The count of numbers\n */\nexport function calculateCount(numbers) {\n  return numbers ? numbers.length : 0;\n}\n\n/**\n * Format a number for display with specified decimal places\n * @param {number|string} value - The value to format\n * @param {number} decimals - Number of decimal places (default: 2)\n * @returns {string} Formatted number string\n */\nexport function formatNumber(value, decimals = 2) {\n  if (value === null || value === undefined) return 'N/A';\n  if (typeof value !== 'number') return value.toString();\n\n  return new Intl.NumberFormat('en-US', {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: decimals,\n  }).format(value);\n}\n\nexport function calculateAllStats(numbers) {\n  if (!numbers || numbers.length === 0) {\n    return {\n      average: 0,\n      median: 0,\n      variance: 0,\n      range: 0,\n      standardDeviation: 0,\n      sum: 0,\n      count: 0,\n    };\n  }\n\n  return {\n    average: calculateSum(numbers) / numbers.length,\n    median: calculateMedian(numbers),\n    variance: calculateVariance(numbers),\n    range: calculateRange(numbers),\n    standardDeviation: calculateStandardDeviation(numbers),\n    sum: calculateSum(numbers),\n    count: calculateCount(numbers),\n  };\n}\n","const STORAGE_KEY = 'meanmachine_calculations';\nconst MAX_HISTORY_ITEMS = 10;\n\nexport function saveCalculation(calculationData) {\n  try {\n    const history = getCalculationHistory();\n\n    const newCalculation = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      numbers: [...calculationData.numbers],\n      results: { ...calculationData.results },\n      inputType: calculationData.inputType || 'custom',\n    };\n\n    history.unshift(newCalculation);\n\n    if (history.length > MAX_HISTORY_ITEMS) {\n      history.splice(MAX_HISTORY_ITEMS);\n    }\n\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(history));\n    return newCalculation;\n  } catch (error) {\n    console.error('Failed to save calculation:', error);\n    return null;\n  }\n}\n\nexport function getCalculationHistory() {\n  try {\n    const stored = localStorage.getItem(STORAGE_KEY);\n    return stored ? JSON.parse(stored) : [];\n  } catch (error) {\n    console.error('Failed to load calculation history:', error);\n    return [];\n  }\n}\n\nexport function clearHistory() {\n  try {\n    localStorage.removeItem(STORAGE_KEY);\n    return true;\n  } catch (error) {\n    console.error('Failed to clear history:', error);\n    return false;\n  }\n}\n\nexport function getCalculationById(id) {\n  const history = getCalculationHistory();\n  return history.find(calc => calc.id === id);\n}\n\nexport function formatTimestamp(timestamp) {\n  const date = new Date(timestamp);\n  const now = new Date();\n  const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n\n  if (diffInMinutes < 1) return 'Just now';\n  if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n  if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n\n  return date.toLocaleDateString();\n}\n","/**\n * Simple Chart Component for visualizing numbers and average\n * Uses SVG for lightweight, responsive charts\n */\nexport class Chart {\n  constructor(container, options = {}) {\n    this.container = container;\n    this.options = {\n      width: 400,\n      height: 200,\n      margin: { top: 20, right: 20, bottom: 40, left: 40 },\n      barColor: '#3b82f6',\n      averageLineColor: '#ef4444',\n      animationDuration: 800,\n      ...options,\n    };\n\n    this.svg = null;\n    this.data = [];\n  }\n\n  render(numbers, average) {\n    this.data = numbers.map((value, index) => ({ index, value }));\n    this.average = average;\n\n    // Clear previous chart\n    this.container.innerHTML = '';\n\n    // Create SVG\n    this.svg = this.createSVG();\n    this.container.appendChild(this.svg);\n\n    // Calculate scales - always start from 0\n    const maxValue = Math.max(...numbers, average);\n    const padding = maxValue * 0.1 + 5;\n    const yMax = maxValue + padding;\n    const yMin = 0;\n\n    this.yScale = value => {\n      const chartHeight =\n        this.options.height -\n        this.options.margin.top -\n        this.options.margin.bottom;\n      return chartHeight - ((value - yMin) / (yMax - yMin)) * chartHeight;\n    };\n\n    this.xScale = index => {\n      const chartWidth =\n        this.options.width -\n        this.options.margin.left -\n        this.options.margin.right;\n      const barWidth = chartWidth / numbers.length;\n      return index * barWidth + barWidth / 2;\n    };\n\n    // Draw chart elements\n    this.drawAxes(yMin, yMax);\n    this.drawBars();\n    this.drawAverageLine();\n    this.drawLabels();\n  }\n\n  createSVG() {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('width', this.options.width);\n    svg.setAttribute('height', this.options.height);\n    svg.setAttribute(\n      'viewBox',\n      `0 0 ${this.options.width} ${this.options.height}`\n    );\n    svg.setAttribute('class', 'chart-svg');\n    svg.style.overflow = 'visible';\n\n    // Add multiple vertical gradients for diamond tier bars\n    const defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n    \n    // Check if we're in diamond tier\n    const isDiamondTier = document.body.classList.contains('tier-diamond');\n    \n    if (isDiamondTier) {\n      const gradientConfigs = [\n        { id: 'diamond-gradient-1', colors: ['#8B0045', '#A0306E'] },\n        { id: 'diamond-gradient-2', colors: ['#006B7A', '#008B98'] },\n        { id: 'diamond-gradient-3', colors: ['#B8860B', '#D4A00D'] },\n        { id: 'diamond-gradient-4', colors: ['#CC5500', '#E66A00'] },\n        { id: 'diamond-gradient-5', colors: ['#4B0082', '#6A0DAD'] },\n        { id: 'diamond-gradient-6', colors: ['#006400', '#228B22'] },\n        { id: 'diamond-gradient-7', colors: ['#8B0000', '#B22222'] },\n        { id: 'diamond-gradient-8', colors: ['#191970', '#4169E1'] },\n        { id: 'diamond-gradient-9', colors: ['#556B2F', '#6B8E23'] },\n        { id: 'diamond-gradient-10', colors: ['#A0522D', '#CD853F'] }\n      ];\n      \n      gradientConfigs.forEach(config => {\n        const gradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        gradient.setAttribute('id', config.id);\n        gradient.setAttribute('x1', '0%');\n        gradient.setAttribute('y1', '0%');\n        gradient.setAttribute('x2', '0%');\n        gradient.setAttribute('y2', '100%'); // Vertical gradient\n        \n        const stop1 = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n        stop1.setAttribute('offset', '0%');\n        stop1.setAttribute('stop-color', config.colors[0]);\n        \n        const stop2 = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n        stop2.setAttribute('offset', '100%');\n        stop2.setAttribute('stop-color', config.colors[1]);\n        \n        gradient.appendChild(stop1);\n        gradient.appendChild(stop2);\n        defs.appendChild(gradient);\n      });\n    }\n    \n    svg.appendChild(defs);\n\n    return svg;\n  }\n\n  drawAxes(yMin, yMax) {\n    const g = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    g.setAttribute('class', 'axes');\n\n    // Y-axis\n    const yAxis = document.createElementNS(\n      'http://www.w3.org/2000/svg',\n      'line'\n    );\n    yAxis.setAttribute('x1', this.options.margin.left);\n    yAxis.setAttribute('y1', this.options.margin.top);\n    yAxis.setAttribute('x2', this.options.margin.left);\n    yAxis.setAttribute('y2', this.options.height - this.options.margin.bottom);\n    yAxis.setAttribute('stroke', 'currentColor');\n    yAxis.setAttribute('stroke-width', '1');\n    yAxis.setAttribute('opacity', '0.3');\n    g.appendChild(yAxis);\n\n    // X-axis\n    const xAxis = document.createElementNS(\n      'http://www.w3.org/2000/svg',\n      'line'\n    );\n    xAxis.setAttribute('x1', this.options.margin.left);\n    xAxis.setAttribute('y1', this.options.height - this.options.margin.bottom);\n    xAxis.setAttribute('x2', this.options.width - this.options.margin.right);\n    xAxis.setAttribute('y2', this.options.height - this.options.margin.bottom);\n    xAxis.setAttribute('stroke', 'currentColor');\n    xAxis.setAttribute('stroke-width', '1');\n    xAxis.setAttribute('opacity', '0.3');\n    g.appendChild(xAxis);\n\n    // Y-axis labels\n    const labelCount = 5;\n    for (let i = 0; i <= labelCount; i++) {\n      const value = yMin + (yMax - yMin) * (i / labelCount);\n      const y = this.options.margin.top + this.yScale(value);\n\n      const label = document.createElementNS(\n        'http://www.w3.org/2000/svg',\n        'text'\n      );\n      label.setAttribute('x', this.options.margin.left - 10);\n      label.setAttribute('y', y + 4);\n      label.setAttribute('text-anchor', 'end');\n      label.setAttribute('class', 'text-xs fill-current opacity-60');\n      label.textContent = value.toFixed(1);\n      g.appendChild(label);\n\n      // Grid line\n      const gridLine = document.createElementNS(\n        'http://www.w3.org/2000/svg',\n        'line'\n      );\n      gridLine.setAttribute('x1', this.options.margin.left);\n      gridLine.setAttribute('y1', y);\n      gridLine.setAttribute(\n        'x2',\n        this.options.width - this.options.margin.right\n      );\n      gridLine.setAttribute('y2', y);\n      gridLine.setAttribute('stroke', 'currentColor');\n      gridLine.setAttribute('stroke-width', '0.5');\n      gridLine.setAttribute('opacity', '0.1');\n      g.appendChild(gridLine);\n    }\n\n    this.svg.appendChild(g);\n  }\n\n  drawBars() {\n    const chartWidth =\n      this.options.width - this.options.margin.left - this.options.margin.right;\n    const barWidth = Math.max(20, (chartWidth / this.data.length) * 0.8);\n\n    this.data.forEach((item, index) => {\n      const x = this.options.margin.left + this.xScale(index) - barWidth / 2;\n      const y = this.options.margin.top + this.yScale(item.value);\n      const height = this.options.height - this.options.margin.bottom - y;\n\n      const bar = document.createElementNS(\n        'http://www.w3.org/2000/svg',\n        'rect'\n      );\n      bar.setAttribute('x', x);\n      bar.setAttribute('y', this.options.height - this.options.margin.bottom); // Start from bottom\n      bar.setAttribute('width', barWidth);\n      bar.setAttribute('height', 0); // Start with 0 height\n      // Use gradient fill for diamond tier, regular color for others\n      const isDiamondTier = document.body.classList.contains('tier-diamond');\n      if (isDiamondTier) {\n        const gradientId = `diamond-gradient-${(index % 10) + 1}`;\n        bar.setAttribute('fill', `url(#${gradientId})`);\n      } else {\n        bar.setAttribute('fill', this.options.barColor);\n      }\n      bar.setAttribute('rx', '2');\n      bar.setAttribute('class', 'bar chart-bar');\n\n      // Add hover effect\n      bar.addEventListener('mouseenter', () => {\n        bar.setAttribute('opacity', '0.8');\n      });\n      bar.addEventListener('mouseleave', () => {\n        bar.setAttribute('opacity', '1');\n      });\n\n      this.svg.appendChild(bar);\n\n      // Animate bar growth\n      setTimeout(() => {\n        bar.style.transition = `height ${this.options.animationDuration}ms ease-out, y ${this.options.animationDuration}ms ease-out`;\n        bar.setAttribute('y', y);\n        bar.setAttribute('height', height);\n      }, index * 100);\n\n      // Add value label on top of bar\n      const label = document.createElementNS(\n        'http://www.w3.org/2000/svg',\n        'text'\n      );\n      label.setAttribute('x', x + barWidth / 2);\n      label.setAttribute('y', y - 5);\n      label.setAttribute('text-anchor', 'middle');\n      label.setAttribute('class', 'text-xs fill-current font-medium');\n      label.setAttribute('opacity', '0');\n      label.textContent = item.value;\n\n      this.svg.appendChild(label);\n\n      // Animate label appearance\n      setTimeout(\n        () => {\n          label.style.transition = `opacity ${this.options.animationDuration / 2}ms ease-out`;\n          label.setAttribute('opacity', '0.8');\n        },\n        index * 100 + this.options.animationDuration / 2\n      );\n    });\n  }\n\n  drawAverageLine() {\n    const y = this.options.margin.top + this.yScale(this.average);\n\n    // Average line\n    const line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n    line.setAttribute('x1', this.options.margin.left);\n    line.setAttribute('y1', y);\n    line.setAttribute('x2', this.options.width - this.options.margin.right);\n    line.setAttribute('y2', y);\n    line.setAttribute('stroke', this.options.averageLineColor);\n    line.setAttribute('stroke-width', '2');\n    line.setAttribute('stroke-dasharray', '5,5');\n    line.setAttribute('opacity', '0');\n    line.setAttribute('class', 'average-line chart-line');\n\n    this.svg.appendChild(line);\n\n    // Animate line appearance\n    setTimeout(\n      () => {\n        line.style.transition = `opacity ${this.options.animationDuration}ms ease-out`;\n        line.setAttribute('opacity', '0.8');\n      },\n      this.data.length * 100 + this.options.animationDuration\n    );\n\n    // Average label\n    const label = document.createElementNS(\n      'http://www.w3.org/2000/svg',\n      'text'\n    );\n    label.setAttribute('x', this.options.width - this.options.margin.right + 5);\n    label.setAttribute('y', y + 4);\n    label.setAttribute('class', 'text-xs fill-current font-semibold');\n    label.setAttribute('opacity', '0');\n    label.style.fill = this.options.averageLineColor;\n    label.textContent = `Avg: ${this.average.toFixed(2)}`;\n\n    this.svg.appendChild(label);\n\n    // Animate label\n    setTimeout(\n      () => {\n        label.style.transition = `opacity ${this.options.animationDuration}ms ease-out`;\n        label.setAttribute('opacity', '1');\n      },\n      this.data.length * 100 + this.options.animationDuration + 200\n    );\n  }\n\n  drawLabels() {\n    // X-axis labels (index numbers)\n    this.data.forEach((item, index) => {\n      const x = this.options.margin.left + this.xScale(index);\n      const y = this.options.height - this.options.margin.bottom + 20;\n\n      const label = document.createElementNS(\n        'http://www.w3.org/2000/svg',\n        'text'\n      );\n      label.setAttribute('x', x);\n      label.setAttribute('y', y);\n      label.setAttribute('text-anchor', 'middle');\n      label.setAttribute('class', 'text-xs fill-current opacity-60');\n      label.textContent = `#${index + 1}`;\n\n      this.svg.appendChild(label);\n    });\n  }\n\n  destroy() {\n    if (this.container) {\n      this.container.innerHTML = '';\n    }\n  }\n}\n","/**\n * Guess Modal Component\n * Allows users to guess statistical values before calculation\n */\n\nimport { achievementSystem } from '../utils/achievements.js';\n\nexport class GuessModal {\n  constructor(numbers, actualValues, onComplete) {\n    this.numbers = numbers;\n    this.actualValues = actualValues;\n    this.onComplete = onComplete;\n    this.guesses = {};\n    this.results = [];\n\n    this.statsToGuess = [\n      { key: 'average', label: 'Average (Mean)', icon: '📊' },\n      { key: 'median', label: 'Median', icon: '📈' },\n      { key: 'variance', label: 'Variance', icon: '📉' },\n      { key: 'stdDev', label: 'Standard Deviation', icon: '📐' },\n      { key: 'range', label: 'Range', icon: '📏' },\n    ];\n\n    this.create();\n  }\n\n  create() {\n    // Create modal structure\n    this.modal = document.createElement('div');\n    this.modal.className = 'guess-modal-overlay';\n    this.modal.innerHTML = `\n      <div class=\"guess-modal\">\n        <div class=\"guess-header\">\n          <h2>🎯 Test Your Math Skills!</h2>\n          <p>Can you calculate these values in your head?</p>\n          <div class=\"numbers-display\">\n            Numbers: <span class=\"number-pills\">${this.formatNumbers()}</span>\n          </div>\n        </div>\n        \n        <div class=\"guess-content\">\n          <div class=\"guess-grid\">\n            ${this.createGuessInputs()}\n          </div>\n          \n          <div class=\"guess-tips\">\n            <p class=\"tip\">💡 Tip: Leave blank to skip any value</p>\n            <p class=\"points-info\">\n              🏆 Points: Exact = 100pts | Within 10% = 50pts | Within 20% = 25pts | Attempt = 5pts\n            </p>\n          </div>\n        </div>\n        \n        <div class=\"guess-footer\">\n          <button class=\"skip-guess-btn\">Skip Challenge</button>\n          <button class=\"submit-guess-btn primary-button\">Submit Guesses</button>\n        </div>\n      </div>\n    `;\n\n    // Add styles\n    this.addStyles();\n\n    // Add to document\n    document.body.appendChild(this.modal);\n\n    // Add event listeners\n    this.attachEventListeners();\n\n    // Focus first input\n    setTimeout(() => {\n      this.modal.querySelector('.guess-input')?.focus();\n    }, 100);\n  }\n\n  formatNumbers() {\n    return this.numbers\n      .map(n => `<span class=\"number-pill\">${n}</span>`)\n      .join('');\n  }\n\n  createGuessInputs() {\n    return this.statsToGuess\n      .map(\n        stat => `\n      <div class=\"guess-item\">\n        <label for=\"guess-${stat.key}\">\n          <span class=\"stat-icon\">${stat.icon}</span>\n          <span class=\"stat-label\">${stat.label}</span>\n        </label>\n        <input \n          type=\"number\" \n          id=\"guess-${stat.key}\" \n          class=\"guess-input\" \n          data-stat=\"${stat.key}\"\n          placeholder=\"Your guess...\"\n          step=\"0.01\"\n        >\n        <div class=\"guess-feedback\" id=\"feedback-${stat.key}\"></div>\n      </div>\n    `\n      )\n      .join('');\n  }\n\n  addStyles() {\n    const style = document.createElement('style');\n    style.textContent = `\n      .guess-modal-overlay {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.7);\n        backdrop-filter: blur(4px);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        z-index: 10000;\n        animation: fadeIn 0.3s ease-out;\n      }\n      \n      .guess-modal {\n        border-radius: 16px;\n        padding: 32px;\n        max-width: 600px;\n        width: 90%;\n        max-height: 80vh;\n        overflow-y: auto;\n        animation: slideIn 0.3s ease-out;\n      }\n      \n      .guess-header {\n        text-align: center;\n        margin-bottom: 24px;\n      }\n      \n      .guess-header h2 {\n        color: #3b82f6;\n        margin-bottom: 8px;\n        font-size: 28px;\n      }\n      \n      .guess-header p {\n        color: #6b7280;\n        margin-bottom: 16px;\n      }\n      \n      [data-theme=\"dark\"] .guess-header p {\n        color: #9ca3af;\n      }\n      \n      .numbers-display {\n        font-size: 16px;\n        color: #374151;\n      }\n      \n      [data-theme=\"dark\"] .numbers-display {\n        color: #d1d5db;\n      }\n      \n      .number-pills {\n        display: inline-flex;\n        gap: 8px;\n        flex-wrap: wrap;\n        margin-left: 8px;\n      }\n      \n      .number-pill {\n        background: #e5e7eb;\n        padding: 4px 12px;\n        border-radius: 20px;\n        font-weight: 600;\n        color: #374151;\n      }\n      \n      [data-theme=\"dark\"] .number-pill {\n        background: #374151;\n        color: #e5e7eb;\n      }\n      \n      .guess-grid {\n        display: grid;\n        gap: 20px;\n        margin-bottom: 24px;\n      }\n      \n      .guess-item {\n        display: grid;\n        grid-template-columns: 200px 1fr;\n        gap: 12px;\n        align-items: center;\n      }\n      \n      .guess-item label {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        font-weight: 500;\n      }\n      \n      .stat-icon {\n        font-size: 20px;\n      }\n      \n      .guess-input {\n        padding: 8px 16px;\n        border: 2px solid #e5e7eb;\n        border-radius: 8px;\n        font-size: 16px;\n        transition: border-color 0.2s;\n      }\n      \n      [data-theme=\"dark\"] .guess-input {\n        background: #374151;\n        border-color: #4b5563;\n        color: #e5e7eb;\n      }\n      \n      .guess-input:focus {\n        outline: none;\n        border-color: #3b82f6;\n      }\n      \n      .guess-feedback {\n        grid-column: 2;\n        font-size: 14px;\n        margin-top: 4px;\n        height: 20px;\n      }\n      \n      .guess-feedback.correct {\n        color: #10b981;\n        font-weight: 600;\n      }\n      \n      .guess-feedback.close {\n        color: #f59e0b;\n      }\n      \n      .guess-feedback.far {\n        color: #ef4444;\n      }\n      \n      .guess-tips {\n        background: #f3f4f6;\n        border-radius: 8px;\n        padding: 16px;\n        margin-bottom: 24px;\n      }\n      \n      [data-theme=\"dark\"] .guess-tips {\n        background: #374151;\n      }\n      \n      .tip {\n        margin: 0 0 8px 0;\n        color: #6b7280;\n      }\n      \n      .points-info {\n        margin: 0;\n        color: #374151;\n        font-size: 14px;\n      }\n      \n      [data-theme=\"dark\"] .points-info {\n        color: #d1d5db;\n      }\n      \n      .guess-footer {\n        display: flex;\n        justify-content: space-between;\n        gap: 16px;\n      }\n      \n      .skip-guess-btn, .submit-guess-btn {\n        padding: 12px 24px;\n        border-radius: 8px;\n        font-size: 16px;\n        font-weight: 600;\n        cursor: pointer;\n        transition: all 0.2s;\n        border: none;\n      }\n      \n      .skip-guess-btn {\n        background: #e5e7eb;\n        color: #374151;\n      }\n      \n      .skip-guess-btn:hover {\n        background: #d1d5db;\n      }\n      \n      [data-theme=\"dark\"] .skip-guess-btn {\n        background: #4b5563;\n        color: #e5e7eb;\n      }\n      \n      [data-theme=\"dark\"] .skip-guess-btn:hover {\n        background: #6b7280;\n      }\n      \n      .submit-guess-btn {\n        background: #3b82f6;\n        color: white;\n        flex: 1;\n      }\n      \n      .submit-guess-btn:hover {\n        background: #2563eb;\n        transform: translateY(-1px);\n      }\n      \n      .submit-guess-btn:active {\n        transform: translateY(0);\n      }\n      \n      @keyframes fadeIn {\n        from { opacity: 0; }\n        to { opacity: 1; }\n      }\n      \n      @keyframes slideIn {\n        from {\n          transform: translateY(-20px);\n          opacity: 0;\n        }\n        to {\n          transform: translateY(0);\n          opacity: 1;\n        }\n      }\n      \n      @media (max-width: 640px) {\n        .guess-item {\n          grid-template-columns: 1fr;\n        }\n        \n        .guess-feedback {\n          grid-column: 1;\n        }\n      }\n    `;\n    document.head.appendChild(style);\n    this.styleElement = style;\n  }\n\n  // Dark mode now handled automatically via CSS variables\n\n  attachEventListeners() {\n    // Skip button\n    this.modal\n      .querySelector('.skip-guess-btn')\n      .addEventListener('click', () => {\n        this.close(false);\n      });\n\n    // Submit button\n    this.modal\n      .querySelector('.submit-guess-btn')\n      .addEventListener('click', () => {\n        this.submitGuesses();\n      });\n\n    // Enter key submits\n    this.modal.addEventListener('keydown', e => {\n      if (e.key === 'Enter' && !e.shiftKey) {\n        e.preventDefault();\n        this.submitGuesses();\n      }\n      if (e.key === 'Escape') {\n        this.close(false);\n      }\n    });\n\n    // Real-time validation feedback\n    this.modal.querySelectorAll('.guess-input').forEach(input => {\n      input.addEventListener('input', () => {\n        this.validateInput(input);\n      });\n    });\n  }\n\n  validateInput(input) {\n    const value = parseFloat(input.value);\n    const stat = input.dataset.stat;\n    const feedback = this.modal.querySelector(`#feedback-${stat}`);\n\n    if (input.value === '') {\n      feedback.textContent = '';\n      feedback.className = 'guess-feedback';\n      return;\n    }\n\n    if (isNaN(value)) {\n      feedback.textContent = 'Please enter a valid number';\n      feedback.className = 'guess-feedback far';\n    } else {\n      feedback.textContent = '✓ Valid guess';\n      feedback.className = 'guess-feedback';\n    }\n  }\n\n  submitGuesses() {\n    const inputs = this.modal.querySelectorAll('.guess-input');\n    let hasGuesses = false;\n\n    inputs.forEach(input => {\n      const stat = input.dataset.stat;\n      const value = parseFloat(input.value);\n\n      if (!isNaN(value) && input.value !== '') {\n        hasGuesses = true;\n        const actual = this.actualValues[stat];\n        const accuracy = actual === 0 \n          ? (value === 0 ? 0 : 1) \n          : Math.abs(value - actual) / Math.abs(actual);\n\n        this.guesses[stat] = value;\n        this.results.push({\n          stat,\n          guess: value,\n          actual,\n          accuracy,\n          points: achievementSystem.calculatePoints('guess', { accuracy }),\n        });\n\n        // Show feedback\n        this.showFeedback(stat, value, actual, accuracy);\n      }\n    });\n\n    if (hasGuesses) {\n      // Delay close to show feedback\n      setTimeout(() => {\n        this.close(true);\n      }, 5000);\n    } else {\n      this.close(false);\n    }\n  }\n\n  showFeedback(stat, guess, actual, accuracy) {\n    const feedback = this.modal.querySelector(`#feedback-${stat}`);\n    const input = this.modal.querySelector(`#guess-${stat}`);\n\n    if (accuracy === 0) {\n      feedback.textContent = '🎯 PERFECT! +100 points';\n      feedback.className = 'guess-feedback correct';\n      input.style.borderColor = '#10b981';\n    } else if (accuracy <= 0.1) {\n      feedback.textContent = `✨ Very close! Within ${(accuracy * 100).toFixed(1)}% (+50 points)`;\n      feedback.className = 'guess-feedback close';\n      input.style.borderColor = '#f59e0b';\n    } else if (accuracy <= 0.2) {\n      feedback.textContent = `👍 Good try! Within ${(accuracy * 100).toFixed(1)}% (+25 points)`;\n      feedback.className = 'guess-feedback close';\n      input.style.borderColor = '#f59e0b';\n    } else {\n      feedback.textContent = `Actual: ${actual.toFixed(2)} (+5 points for trying)`;\n      feedback.className = 'guess-feedback far';\n      input.style.borderColor = '#ef4444';\n    }\n  }\n\n  close(submitted) {\n    this.modal.classList.add('closing');\n\n    setTimeout(() => {\n      this.modal.remove();\n      this.styleElement.remove();\n\n      if (this.onComplete) {\n        this.onComplete(submitted ? this.results : null);\n      }\n    }, 300);\n  }\n}\n\n// Add closing animation\nconst closingStyle = document.createElement('style');\nclosingStyle.textContent = `\n  .guess-modal-overlay.closing {\n    animation: fadeOut 0.3s ease-out;\n  }\n  \n  .guess-modal-overlay.closing .guess-modal {\n    animation: slideOut 0.3s ease-out;\n  }\n  \n  @keyframes fadeOut {\n    to { opacity: 0; }\n  }\n  \n  @keyframes slideOut {\n    to {\n      transform: translateY(-20px);\n      opacity: 0;\n    }\n  }\n`;\ndocument.head.appendChild(closingStyle);\n","/**\n * Signature Module\n * Shows creator signature and manages special touches\n */\n\nexport class SignatureManager {\n  constructor() {\n    this.showCount = 0;\n    this.init();\n  }\n\n  init() {\n    // Import signature styles\n    const link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = '/src/styles/signature.css';\n    document.head.appendChild(link);\n\n    // Add easter egg hint\n    this.addEasterEggHint();\n\n    // Initialize favicon animation\n    this.setupFaviconAnimation();\n\n    // Setup achievement progress bar\n    this.setupAchievementProgress();\n  }\n\n  showSignature() {\n    this.showCount++;\n\n    // Show signature every 3 calculations\n    if (this.showCount % 3 !== 0) return;\n\n    const signature = document.createElement('div');\n    signature.className = 'creator-signature';\n    signature.innerHTML = `\n      Built with ❤️ by\n      <a href=\"https://github.com/yourusername\" target=\"_blank\" rel=\"noopener\">Jay</a>\n    `;\n\n    document.body.appendChild(signature);\n\n    // Show with animation\n    setTimeout(() => {\n      signature.classList.add('show');\n    }, 100);\n\n    // Hide after 3 seconds\n    setTimeout(() => {\n      signature.classList.remove('show');\n      setTimeout(() => signature.remove(), 300);\n    }, 3000);\n  }\n\n  addEasterEggHint() {\n    const hint = document.createElement('div');\n    hint.className = 'easter-egg-hint';\n    hint.textContent = '↑↑↓↓←→←→BA';\n    hint.title = 'Try this sequence on your keyboard...';\n    document.body.appendChild(hint);\n  }\n\n  setupFaviconAnimation() {\n    this.originalFavicon = document.querySelector('link[rel=\"icon\"]')?.href;\n\n    // Create animated favicon for calculations\n    this.animatedFavicon = this.createAnimatedFavicon();\n  }\n\n  createAnimatedFavicon() {\n    const canvas = document.createElement('canvas');\n    canvas.width = 32;\n    canvas.height = 32;\n    const ctx = canvas.getContext('2d');\n\n    // Return a function that generates animated favicon\n    return progress => {\n      ctx.clearRect(0, 0, 32, 32);\n\n      // Background\n      ctx.fillStyle = '#3b82f6';\n      ctx.fillRect(0, 0, 32, 32);\n\n      // Animated loading bar\n      ctx.fillStyle = '#10b981';\n      ctx.fillRect(0, 28, 32 * progress, 4);\n\n      // Calculator symbol\n      ctx.fillStyle = 'white';\n      ctx.font = 'bold 20px Arial';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText('∑', 16, 14);\n\n      return canvas.toDataURL();\n    };\n  }\n\n  animateFavicon(duration = 2000) {\n    const favicon = document.querySelector('link[rel=\"icon\"]');\n    if (!favicon) return;\n\n    const startTime = Date.now();\n    const animate = () => {\n      const elapsed = Date.now() - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n\n      favicon.href = this.animatedFavicon(progress);\n\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      } else {\n        // Restore original favicon\n        if (this.originalFavicon) {\n          favicon.href = this.originalFavicon;\n        }\n      }\n    };\n\n    animate();\n  }\n\n  setupAchievementProgress() {\n    // Create progress bar container\n    const progressBar = document.createElement('div');\n    progressBar.className = 'achievement-progress';\n    progressBar.innerHTML = '<div class=\"achievement-progress-bar\"></div>';\n    document.body.appendChild(progressBar);\n\n    this.progressBar = progressBar;\n    this.progressBarInner = progressBar.querySelector(\n      '.achievement-progress-bar'\n    );\n  }\n\n  updateAchievementProgress(progress) {\n    if (!this.progressBar) return;\n\n    // Show progress bar\n    this.progressBar.classList.add('show');\n\n    // Update width\n    this.progressBarInner.style.width = `${progress}%`;\n\n    // Hide after 3 seconds\n    clearTimeout(this.progressTimeout);\n    this.progressTimeout = setTimeout(() => {\n      this.progressBar.classList.remove('show');\n    }, 3000);\n  }\n\n  create404Page() {\n    // This would be used if we had routing, but for now it's just a template\n    return `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>404 - Lost in Calculation</title>\n        <style>\n          body { margin: 0; font-family: system-ui, -apple-system, sans-serif; }\n          ${this.get404Styles()}\n        </style>\n      </head>\n      <body>\n        <div class=\"error-404\">\n          <h1>404</h1>\n          <h2>Lost in the Numbers!</h2>\n          <p>The page you're looking for doesn't add up.</p>\n          <pre class=\"calculator-ascii\">\n     _____________________\n    |  _________________  |\n    | |              0. | |\n    | |_________________| |\n    |  ___ ___ ___   ___  |\n    | | 7 | 8 | 9 | | + | |\n    | |___|___|___| |___| |\n    | | 4 | 5 | 6 | | - | |\n    | |___|___|___| |___| |\n    | | 1 | 2 | 3 | | × | |\n    | |___|___|___| |___| |\n    | | . | 0 | = | | ÷ | |\n    | |___|___|___| |___| |\n    |_____________________|\n          </pre>\n          <a href=\"/\" style=\"color: white; font-size: 1.2rem;\">← Back to Calculator</a>\n        </div>\n      </body>\n      </html>\n    `;\n  }\n\n  get404Styles() {\n    // Return the 404 specific styles\n    return `\n      .error-404 {\n        min-height: 100vh;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        text-align: center;\n        padding: 2rem;\n        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        color: white;\n      }\n      /* ... rest of 404 styles from signature.css ... */\n    `;\n  }\n}\n\n// Export singleton instance\nexport const signatureManager = new SignatureManager();\n","import { Modal } from './Modal.js';\nimport { calculateAllStats, formatNumber } from '../utils/statistics.js';\nimport {\n  saveCalculation,\n  getCalculationHistory,\n  formatTimestamp,\n} from '../utils/storage.js';\nimport { Chart } from './Chart.js';\nimport { GuessModal } from './GuessModal.js';\nimport { achievementSystem } from '../utils/achievements.js';\nimport { signatureManager } from '../utils/signature.js';\n\n/**\n * Calculator Modal Component\n * Handles number input and calculation display\n */\nexport class CalculatorModal extends Modal {\n  constructor(calculateFunction) {\n    super({\n      closeOnBackdrop: true,\n      closeOnEscape: true,\n      focusTrap: true,\n    });\n\n    this.calculateFunction = calculateFunction;\n    this.mode = 'custom'; // 'custom' or 'random'\n    this.numbers = [];\n    this.result = null;\n    this.chart = null;\n\n    this.render();\n  }\n\n  render() {\n    const content = `\n      <div class=\"p-6\">\n        <!-- Header -->\n        <header class=\"flex items-center justify-between mb-6\">\n          <h2 class=\"text-2xl font-bold text-gray-900 dark:text-gray-100 transition-colors duration-300\" id=\"modal-title\">Average Calculator</h2>\n          <button \n            class=\"close-btn text-gray-400 dark:text-gray-500 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 rounded-md p-1\" \n            aria-label=\"Close calculator modal\"\n            type=\"button\"\n          >\n            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </header>\n        \n        <!-- Modal Description for Screen Readers -->\n        <p id=\"modal-description\" class=\"sr-only\">\n          Interactive calculator for computing averages. Use tab navigation to move between controls. \n          Choose between custom number input or random number generation modes.\n        </p>\n\n        <!-- Tab Navigation -->\n        <div class=\"flex border-b border-gray-200 dark:border-gray-600 mb-6 transition-colors duration-300\" role=\"tablist\" aria-labelledby=\"input-mode-label\">\n          <h3 id=\"input-mode-label\" class=\"sr-only\">Input Mode Selection</h3>\n          <button \n            class=\"tab-btn px-4 py-2 font-medium text-gray-700 dark:text-gray-200 border-b-2 border-blue-500 dark:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition-colors duration-300\" \n            data-tab=\"custom\" \n            role=\"tab\"\n            aria-selected=\"true\"\n            aria-controls=\"custom-tab\"\n            id=\"custom-tab-button\"\n            tabindex=\"0\"\n          >\n            Custom Numbers\n          </button>\n          <button \n            class=\"tab-btn px-4 py-2 font-medium text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition-colors duration-300\" \n            data-tab=\"random\" \n            role=\"tab\"\n            aria-selected=\"false\"\n            aria-controls=\"random-tab\"\n            id=\"random-tab-button\"\n            tabindex=\"-1\"\n          >\n            Random Numbers\n          </button>\n        </div>\n\n        <!-- Tab Content -->\n        <div class=\"tab-content\">\n          <!-- Custom Numbers Tab -->\n          <div \n            id=\"custom-tab\" \n            class=\"tab-panel\" \n            role=\"tabpanel\" \n            aria-labelledby=\"custom-tab-button\"\n            aria-hidden=\"false\"\n          >\n            <div class=\"mb-4\">\n              <p class=\"text-sm text-gray-600 dark:text-gray-400 mb-4 transition-colors duration-300\">Enter numbers to calculate their average (2-10 numbers)</p>\n              <div id=\"number-inputs\" class=\"space-y-3\" role=\"group\" aria-label=\"Number input fields\">\n                ${this.createNumberInput(0)}\n                ${this.createNumberInput(1)}\n              </div>\n              <div class=\"mt-3 flex items-center gap-4\" role=\"group\" aria-label=\"Input controls\">\n                <button \n                  id=\"add-input\" \n                  class=\"text-sm text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 rounded transition-colors duration-300\"\n                  aria-label=\"Add another number input field\"\n                  type=\"button\"\n                >\n                  + Add another number\n                </button>\n                <button \n                  id=\"clear-inputs\" \n                  class=\"text-sm text-red-600 dark:text-red-400 hover:text-red-700 dark:hover:text-red-300 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50 rounded transition-colors duration-300\"\n                  aria-label=\"Clear all number inputs\"\n                  type=\"button\"\n                >\n                  Clear all\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <!-- Random Numbers Tab -->\n          <div \n            id=\"random-tab\" \n            class=\"tab-panel hidden\" \n            role=\"tabpanel\" \n            aria-labelledby=\"random-tab-button\"\n            aria-hidden=\"true\"\n          >\n            <div class=\"space-y-4\">\n              <div>\n                <label \n                  for=\"random-count\"\n                  class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 transition-colors duration-300\"\n                >\n                  How many numbers?\n                </label>\n                <input \n                  type=\"range\" \n                  id=\"random-count\" \n                  min=\"2\" \n                  max=\"10\" \n                  value=\"5\" \n                  class=\"w-full h-2 bg-gray-200 dark:bg-gray-600 rounded-lg appearance-none cursor-pointer transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\n                  aria-describedby=\"count-display count-range\"\n                >\n                <div class=\"flex justify-between text-xs text-gray-500 dark:text-gray-400 mt-1 transition-colors duration-300\" id=\"count-range\">\n                  <span>2</span>\n                  <span id=\"count-display\" class=\"font-medium text-gray-700 dark:text-gray-300 transition-colors duration-300\" aria-live=\"polite\">5</span>\n                  <span>10</span>\n                </div>\n              </div>\n              \n              <fieldset class=\"grid grid-cols-2 gap-4\">\n                <legend class=\"sr-only\">Random number generation range</legend>\n                <div>\n                  <label \n                    for=\"random-min\"\n                    class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 transition-colors duration-300\"\n                  >\n                    Min Value\n                  </label>\n                  <input \n                    type=\"number\" \n                    id=\"random-min\" \n                    value=\"1\" \n                    class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-blue-500 dark:focus:border-blue-400 transition-colors duration-300\"\n                    aria-label=\"Minimum value for random number generation\"\n                    aria-describedby=\"random-range-help\"\n                  >\n                </div>\n                <div>\n                  <label \n                    for=\"random-max\"\n                    class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 transition-colors duration-300\"\n                  >\n                    Max Value\n                  </label>\n                  <input \n                    type=\"number\" \n                    id=\"random-max\" \n                    value=\"100\" \n                    class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-blue-500 dark:focus:border-blue-400 transition-colors duration-300\"\n                    aria-label=\"Maximum value for random number generation\"\n                    aria-describedby=\"random-range-help\"\n                  >\n                </div>\n                <p id=\"random-range-help\" class=\"sr-only col-span-2\">\n                  Set the minimum and maximum values for random number generation. Generated numbers will be between these values inclusive.\n                </p>\n              </fieldset>\n              \n            </div>\n          </div>\n        </div>\n\n        <!-- Result Display -->\n        <section id=\"result-display\" class=\"hidden mt-6\" aria-labelledby=\"results-heading\">\n          <h3 id=\"results-heading\" class=\"sr-only\">Calculation Results</h3>\n          \n          <!-- Input Numbers Display -->\n          <div class=\"mb-6 p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg transition-colors duration-300\" role=\"region\" aria-labelledby=\"input-summary\">\n            <p id=\"input-summary\" class=\"text-sm text-gray-600 dark:text-gray-400 mb-2 transition-colors duration-300\">Your numbers:</p>\n            <div id=\"number-pills\" class=\"flex flex-wrap gap-2\" role=\"list\" aria-label=\"Input numbers used in calculation\"></div>\n          </div>\n\n          <!-- Results Tab Navigation -->\n          <div class=\"flex border-b border-gray-200 dark:border-gray-600 mb-4 transition-colors duration-300\" role=\"tablist\" aria-labelledby=\"results-tabs-label\">\n            <h4 id=\"results-tabs-label\" class=\"sr-only\">Results Display Options</h4>\n            <button \n              class=\"result-tab-btn px-4 py-2 font-medium text-gray-700 dark:text-gray-200 border-b-2 border-blue-500 dark:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition-colors\" \n              data-result-tab=\"overview\" \n              role=\"tab\"\n              aria-selected=\"true\"\n              aria-controls=\"overview-tab\"\n              id=\"overview-tab-button\"\n              tabindex=\"0\"\n            >\n              Overview\n            </button>\n            <button \n              class=\"result-tab-btn px-4 py-2 font-medium text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition-colors\" \n              data-result-tab=\"statistics\" \n              role=\"tab\"\n              aria-selected=\"false\"\n              aria-controls=\"statistics-tab\"\n              id=\"statistics-tab-button\"\n              tabindex=\"-1\"\n            >\n              Statistics\n            </button>\n            <button \n              class=\"result-tab-btn px-4 py-2 font-medium text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition-colors\" \n              data-result-tab=\"history\" \n              role=\"tab\"\n              aria-selected=\"false\"\n              aria-controls=\"history-tab\"\n              id=\"history-tab-button\"\n              tabindex=\"-1\"\n            >\n              History\n            </button>\n          </div>\n\n          <!-- Results Tab Content -->\n          <div class=\"result-tab-content\">\n            <!-- Overview Tab -->\n            <div \n              id=\"overview-tab\" \n              class=\"result-tab-panel\" \n              role=\"tabpanel\" \n              aria-labelledby=\"overview-tab-button\"\n              aria-hidden=\"false\"\n            >\n              <div class=\"text-center p-6 bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-lg transition-colors duration-300\" role=\"region\" aria-labelledby=\"average-display\">\n                <h5 id=\"average-display\" class=\"text-sm text-gray-600 dark:text-gray-300 mb-2 transition-colors duration-300\">Average</h5>\n                <div id=\"result-value\" class=\"text-5xl font-bold text-blue-600 dark:text-blue-300 mb-4 transition-colors duration-300\" aria-live=\"polite\" aria-atomic=\"true\">0</div>\n                <div class=\"grid grid-cols-2 gap-4 mt-6 text-sm\" role=\"group\" aria-label=\"Summary statistics\">\n                  <div class=\"text-center\" role=\"group\" aria-labelledby=\"sum-label\">\n                    <p id=\"sum-label\" class=\"text-gray-500 dark:text-gray-300 transition-colors duration-300\">Sum</p>\n                    <p id=\"sum-value\" class=\"font-semibold text-gray-700 dark:text-gray-200 transition-colors duration-300\" aria-describedby=\"sum-label\">0</p>\n                  </div>\n                  <div class=\"text-center\" role=\"group\" aria-labelledby=\"count-label\">\n                    <p id=\"count-label\" class=\"text-gray-500 dark:text-gray-300 transition-colors duration-300\">Count</p>\n                    <p id=\"count-value\" class=\"font-semibold text-gray-700 dark:text-gray-200 transition-colors duration-300\" aria-describedby=\"count-label\">0</p>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- Chart Visualization -->\n              <div class=\"mt-6 p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg transition-colors duration-300\" role=\"region\" aria-labelledby=\"chart-heading\">\n                <h5 id=\"chart-heading\" class=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-3 text-center transition-colors duration-300\">Data Visualization</h5>\n                <div \n                  id=\"chart-container\" \n                  class=\"flex justify-center items-center min-h-[200px] text-gray-900 dark:text-gray-100 transition-colors duration-300\"\n                  role=\"img\"\n                  aria-label=\"Bar chart showing input numbers with average line\"\n                  aria-describedby=\"chart-description\"\n                >\n                  <!-- Chart will be rendered here -->\n                </div>\n                <p id=\"chart-description\" class=\"sr-only\">\n                  Interactive bar chart displaying all input numbers as bars with a horizontal line indicating the calculated average value.\n                </p>\n              </div>\n            </div>\n\n            <!-- Statistics Tab -->\n            <div \n              id=\"statistics-tab\" \n              class=\"result-tab-panel hidden\" \n              role=\"tabpanel\" \n              aria-labelledby=\"statistics-tab-button\"\n              aria-hidden=\"true\"\n            >\n              <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\" role=\"list\" aria-label=\"Detailed statistical measures\">\n                <article class=\"stat-card p-4 bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-900/30 dark:to-emerald-900/30 rounded-lg transition-colors duration-300\" role=\"listitem\" aria-labelledby=\"median-heading\">\n                  <div class=\"flex items-center justify-between mb-2\">\n                    <h5 id=\"median-heading\" class=\"font-medium text-gray-700 dark:text-gray-200 transition-colors duration-300\">Median</h5>\n                    <button \n                      class=\"tooltip-trigger text-gray-400 dark:text-gray-500 cursor-help transition-colors duration-300 p-1 rounded focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50\" \n                      data-tooltip=\"The middle value when numbers are sorted\"\n                      aria-label=\"Information about median calculation\"\n                      type=\"button\"\n                    >ⓘ</button>\n                  </div>\n                  <p id=\"median-value\" class=\"text-2xl font-bold text-green-600 dark:text-green-400 transition-colors duration-300\" aria-describedby=\"median-heading\">0</p>\n                </article>\n                \n                <article class=\"stat-card p-4 bg-gradient-to-br from-purple-50 to-violet-50 dark:from-purple-900/30 dark:to-violet-900/30 rounded-lg transition-colors duration-300\" role=\"listitem\" aria-labelledby=\"variance-heading\">\n                  <div class=\"flex items-center justify-between mb-2\">\n                    <h5 id=\"variance-heading\" class=\"font-medium text-gray-700 dark:text-gray-200 transition-colors duration-300\">Variance</h5>\n                    <button \n                      class=\"tooltip-trigger text-gray-400 dark:text-gray-500 cursor-help transition-colors duration-300 p-1 rounded focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-opacity-50\" \n                      data-tooltip=\"Sample variance: average squared deviation from mean (s²)\"\n                      aria-label=\"Information about variance calculation\"\n                      type=\"button\"\n                    >ⓘ</button>\n                  </div>\n                  <p id=\"variance-value\" class=\"text-2xl font-bold text-purple-600 dark:text-purple-400 transition-colors duration-300\" aria-describedby=\"variance-heading\">0</p>\n                </article>\n                \n                <article class=\"stat-card p-4 bg-gradient-to-br from-orange-50 to-amber-50 dark:from-orange-900/30 dark:to-amber-900/30 rounded-lg transition-colors duration-300\" role=\"listitem\" aria-labelledby=\"range-heading\">\n                  <div class=\"flex items-center justify-between mb-2\">\n                    <h5 id=\"range-heading\" class=\"font-medium text-gray-700 dark:text-gray-200 transition-colors duration-300\">Range</h5>\n                    <button \n                      class=\"tooltip-trigger text-gray-400 dark:text-gray-500 cursor-help transition-colors duration-300 p-1 rounded focus:outline-none focus:ring-2 focus:ring-orange-500 focus:ring-opacity-50\" \n                      data-tooltip=\"The difference between the highest and lowest values\"\n                      aria-label=\"Information about range calculation\"\n                      type=\"button\"\n                    >ⓘ</button>\n                  </div>\n                  <p id=\"range-value\" class=\"text-2xl font-bold text-orange-600 dark:text-orange-400 transition-colors duration-300\" aria-describedby=\"range-heading\">0</p>\n                </article>\n                \n                <article class=\"stat-card p-4 bg-gradient-to-br from-red-50 to-rose-50 dark:from-red-900/30 dark:to-rose-900/30 rounded-lg transition-colors duration-300\" role=\"listitem\" aria-labelledby=\"stddev-heading\">\n                  <div class=\"flex items-center justify-between mb-2\">\n                    <h5 id=\"stddev-heading\" class=\"font-medium text-gray-700 dark:text-gray-200 transition-colors duration-300\">Std. Deviation</h5>\n                    <button \n                      class=\"tooltip-trigger text-gray-400 dark:text-gray-500 cursor-help transition-colors duration-300 p-1 rounded focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50\" \n                      data-tooltip=\"A measure of how spread out the numbers are\"\n                      aria-label=\"Information about standard deviation calculation\"\n                      type=\"button\"\n                    >ⓘ</button>\n                  </div>\n                  <p id=\"stddev-value\" class=\"text-2xl font-bold text-red-600 dark:text-red-400 transition-colors duration-300\" aria-describedby=\"stddev-heading\">0</p>\n                </article>\n              </div>\n            </div>\n\n            <!-- History Tab -->\n            <div \n              id=\"history-tab\" \n              class=\"result-tab-panel hidden\" \n              role=\"tabpanel\" \n              aria-labelledby=\"history-tab-button\"\n              aria-hidden=\"true\"\n            >\n              <div class=\"flex items-center justify-between mb-4\">\n                <h5 id=\"history-heading\" class=\"font-medium text-gray-700 dark:text-gray-300 transition-colors duration-300\">Recent Calculations</h5>\n                <button \n                  id=\"clear-history\" \n                  class=\"text-sm text-red-600 dark:text-red-400 hover:text-red-700 dark:hover:text-red-300 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50 rounded transition-colors duration-300\"\n                  aria-label=\"Clear all calculation history\"\n                  type=\"button\"\n                >\n                  Clear History\n                </button>\n              </div>\n              <div \n                id=\"history-list\" \n                class=\"space-y-2 max-h-60 overflow-y-auto custom-scrollbar\" \n                role=\"list\" \n                aria-labelledby=\"history-heading\"\n                aria-describedby=\"history-help\"\n              >\n                <!-- History items will be populated here -->\n              </div>\n              <p id=\"history-help\" class=\"sr-only\">\n                Click on any history item to reload those numbers and results. Use tab key to navigate through history items.\n              </p>\n            </div>\n          </div>\n\n          <!-- Result Action Buttons -->\n          <div class=\"flex gap-3 justify-center mt-6\" role=\"group\" aria-label=\"Result actions\">\n            <button \n              id=\"calculate-again\" \n              class=\"px-4 py-2 bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-200 rounded-md hover:bg-gray-300 dark:hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-500 dark:focus:ring-gray-400 transition-colors\"\n              aria-label=\"Start a new calculation with fresh inputs\"\n              type=\"button\"\n            >\n              Calculate Again\n            </button>\n            <button \n              id=\"copy-result\" \n              class=\"copy-result-btn px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors\"\n              aria-label=\"Copy calculation results to clipboard\"\n              aria-describedby=\"copy-help\"\n              type=\"button\"\n            >\n              Copy Result\n            </button>\n          </div>\n          <p id=\"copy-help\" class=\"sr-only\">\n            Copies the current tab's content to clipboard. Switch tabs to copy different result formats.\n          </p>\n\n          <!-- Tooltip -->\n          <div \n            id=\"tooltip\" \n            class=\"hidden absolute bg-gray-800 dark:bg-gray-900 text-white text-xs rounded px-2 py-1 pointer-events-none z-50 shadow-lg\"\n            role=\"tooltip\"\n            aria-hidden=\"true\"\n          ></div>\n        </section>\n\n        <!-- Error Display -->\n        <div \n          id=\"error-display\" \n          class=\"hidden mt-4 p-4 bg-red-50 dark:bg-red-900/30 border border-red-200 dark:border-red-700 rounded-md transition-colors duration-300\"\n          role=\"alert\"\n          aria-live=\"assertive\"\n        >\n          <p class=\"text-sm text-red-600 dark:text-red-400 transition-colors duration-300\" id=\"error-message\"></p>\n        </div>\n\n        <!-- Footer with Challenge Toggle and Action Buttons -->\n        <div class=\"mt-6 flex items-center justify-between\">\n          <!-- Challenge Mode Toggle -->\n          <div class=\"flex items-center\">\n            <input \n              type=\"checkbox\" \n              id=\"enable-guessing\" \n              class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\n              checked\n            >\n            <label \n              for=\"enable-guessing\" \n              class=\"ml-2 text-sm font-medium text-gray-700 dark:text-gray-300 cursor-pointer\"\n              title=\"Test your math skills by guessing statistical values before calculation\"\n            >\n              Challenge Mode 🎯\n            </label>\n          </div>\n          \n          <!-- Action Buttons -->\n          <div class=\"flex gap-3\" role=\"group\" aria-label=\"Calculator actions\">\n            <button \n              id=\"cancel-btn\" \n              class=\"px-4 py-2 text-gray-700 dark:text-gray-300 bg-gray-200 dark:bg-gray-600 rounded-md hover:bg-gray-300 dark:hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-500 dark:focus:ring-gray-400 transition-colors duration-300\"\n              aria-label=\"Cancel and close calculator\"\n              type=\"button\"\n            >\n              Cancel\n            </button>\n            <button \n              id=\"calculate-btn\" \n              class=\"px-4 py-2 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-md hover:from-green-600 hover:to-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 transition-colors\"\n              aria-describedby=\"calculate-help\"\n              type=\"button\"\n            >\n              Calculate Average\n            </button>\n            <p id=\"calculate-help\" class=\"sr-only\">\n              Processes entered numbers and displays comprehensive statistical results including average, median, variance, and more.\n            </p>\n          </div>\n        </div>\n      </div>\n    `;\n\n    this.setContent(content);\n    this.attachEventListeners();\n  }\n\n  createNumberInput(index) {\n    return `\n      <div class=\"flex items-center gap-2 number-input-group\" role=\"group\" aria-label=\"Number input ${index + 1}\">\n        <label for=\"number-input-${index}\" class=\"sr-only\">Number ${index + 1}</label>\n        <input \n          type=\"number\" \n          id=\"number-input-${index}\"\n          class=\"number-input flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-blue-500 dark:focus:border-blue-400 transition-colors duration-300\" \n          placeholder=\"Enter a number\"\n          aria-label=\"Number ${index + 1} input field\"\n          aria-describedby=\"number-help-${index}\"\n          step=\"any\"\n        >\n        <span id=\"number-help-${index}\" class=\"sr-only\">Enter any numeric value for calculation</span>\n        ${\n          index > 1\n            ? `\n          <button \n            class=\"remove-input text-red-500 dark:text-red-400 hover:text-red-700 dark:hover:text-red-300 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50 rounded transition-colors duration-300 p-1\" \n            aria-label=\"Remove number ${index + 1} input field\"\n            type=\"button\"\n          >\n            <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n            </svg>\n          </button>\n        `\n            : ''\n        }\n      </div>\n    `;\n  }\n\n  attachEventListeners() {\n    // Close button\n    this.modal\n      .querySelector('.close-btn')\n      .addEventListener('click', () => this.close());\n    this.modal\n      .querySelector('#cancel-btn')\n      .addEventListener('click', () => this.close());\n\n    // Tab switching with keyboard navigation\n    this.modal.querySelectorAll('.tab-btn').forEach(btn => {\n      btn.addEventListener('click', e => this.switchTab(e.target.dataset.tab));\n      btn.addEventListener('keydown', e =>\n        this.handleTabKeyNavigation(e, 'tab-btn')\n      );\n    });\n\n    // Custom numbers functionality\n    this.modal\n      .querySelector('#add-input')\n      .addEventListener('click', () => this.addNumberInput());\n    this.modal\n      .querySelector('#clear-inputs')\n      .addEventListener('click', () => this.clearAllInputs());\n    this.modal\n      .querySelector('#calculate-btn')\n      .addEventListener('click', () => this.calculate());\n\n    // Random numbers functionality\n    const randomCount = this.modal.querySelector('#random-count');\n    const countDisplay = this.modal.querySelector('#count-display');\n    randomCount.addEventListener('input', e => {\n      countDisplay.textContent = e.target.value;\n    });\n\n    // Result tabs with keyboard navigation\n    this.modal.querySelectorAll('.result-tab-btn').forEach(btn => {\n      btn.addEventListener('click', e =>\n        this.switchResultTab(e.target.dataset.resultTab)\n      );\n      btn.addEventListener('keydown', e =>\n        this.handleTabKeyNavigation(e, 'result-tab-btn')\n      );\n    });\n\n    // Result actions\n    this.modal\n      .querySelector('#calculate-again')\n      .addEventListener('click', () => this.reset());\n    this.modal\n      .querySelector('#copy-result')\n      .addEventListener('click', () => this.copyResult());\n    this.modal\n      .querySelector('#clear-history')\n      .addEventListener('click', () => this.clearHistory());\n\n    // Tooltip functionality\n    this.modal.addEventListener(\n      'mouseenter',\n      e => {\n        if (e.target.classList.contains('tooltip-trigger')) {\n          this.showTooltip(e.target, e.target.dataset.tooltip);\n        }\n      },\n      true\n    );\n\n    this.modal.addEventListener(\n      'mouseleave',\n      e => {\n        if (e.target.classList.contains('tooltip-trigger')) {\n          this.hideTooltip();\n        }\n      },\n      true\n    );\n\n    // Dynamic event delegation for remove buttons\n    this.modal.addEventListener('click', e => {\n      if (e.target.closest('.remove-input')) {\n        this.removeNumberInput(e.target.closest('.number-input-group'));\n      }\n    });\n\n    // Real-time validation\n    this.modal.addEventListener('input', e => {\n      if (e.target.classList.contains('number-input')) {\n        this.validateInput(e.target);\n      }\n    });\n  }\n\n  switchTab(tab) {\n    this.mode = tab;\n\n    // Update tab buttons\n    this.modal.querySelectorAll('.tab-btn').forEach(btn => {\n      if (btn.dataset.tab === tab) {\n        btn.classList.add(\n          'text-gray-700',\n          'dark:text-gray-200',\n          'border-b-2',\n          'border-blue-500',\n          'dark:border-blue-400'\n        );\n        btn.classList.remove('text-gray-500', 'dark:text-gray-400');\n        btn.setAttribute('aria-selected', 'true');\n        btn.setAttribute('tabindex', '0');\n      } else {\n        btn.classList.remove(\n          'text-gray-700',\n          'dark:text-gray-200',\n          'border-b-2',\n          'border-blue-500',\n          'dark:border-blue-400'\n        );\n        btn.classList.add('text-gray-500', 'dark:text-gray-400');\n        btn.setAttribute('aria-selected', 'false');\n        btn.setAttribute('tabindex', '-1');\n      }\n    });\n\n    // Make sure tab content is visible first\n    const tabContent = this.modal.querySelector('.tab-content');\n    if (tabContent.classList.contains('hidden')) {\n      tabContent.classList.remove('hidden');\n    }\n\n    // Update tab panels\n    const customTab = this.modal.querySelector('#custom-tab');\n    const randomTab = this.modal.querySelector('#random-tab');\n\n    if (tab === 'custom') {\n      customTab.classList.remove('hidden');\n      customTab.setAttribute('aria-hidden', 'false');\n      randomTab.classList.add('hidden');\n      randomTab.setAttribute('aria-hidden', 'true');\n    } else {\n      customTab.classList.add('hidden');\n      customTab.setAttribute('aria-hidden', 'true');\n      randomTab.classList.remove('hidden');\n      randomTab.setAttribute('aria-hidden', 'false');\n    }\n\n    // Announce tab change for screen readers\n    this.announceToScreenReader(\n      `Switched to ${tab === 'custom' ? 'custom' : 'random'} numbers input mode`\n    );\n\n    // Update button text and visibility based on tab\n    const calculateBtn = this.modal.querySelector('#calculate-btn');\n    calculateBtn.classList.remove('hidden');\n\n    if (tab === 'custom') {\n      calculateBtn.textContent = 'Calculate Average';\n    } else {\n      calculateBtn.textContent = 'Generate & Calculate Average';\n    }\n\n    this.hideError();\n    this.hideResult();\n  }\n\n  addNumberInput() {\n    const container = this.modal.querySelector('#number-inputs');\n    const inputCount = container.querySelectorAll('.number-input-group').length;\n\n    if (inputCount >= 10) {\n      this.showError('Maximum 10 numbers allowed');\n      return;\n    }\n\n    const div = document.createElement('div');\n    div.innerHTML = this.createNumberInput(inputCount);\n    container.appendChild(div.firstElementChild);\n\n    // Focus new input\n    const newInput = container.lastElementChild.querySelector('input');\n    newInput.focus();\n  }\n\n  removeNumberInput(inputGroup) {\n    const container = this.modal.querySelector('#number-inputs');\n    const inputCount = container.querySelectorAll('.number-input-group').length;\n\n    if (inputCount <= 2) {\n      this.showError('Minimum 2 numbers required');\n      return;\n    }\n\n    inputGroup.remove();\n  }\n\n  clearAllInputs() {\n    const inputs = this.modal.querySelectorAll('.number-input');\n    inputs.forEach(input => {\n      input.value = '';\n      input.classList.remove('border-red-500');\n    });\n    this.hideError();\n\n    // Reset the internal state\n    this.numbers = [];\n    this.result = null;\n\n    // Reset to just 2 inputs\n    const container = this.modal.querySelector('#number-inputs');\n    const inputGroups = container.querySelectorAll('.number-input-group');\n\n    // Remove all inputs beyond the first 2\n    inputGroups.forEach((group, index) => {\n      if (index > 1) {\n        group.remove();\n      }\n    });\n  }\n\n  validateInput(input) {\n    const value = input.value;\n    if (value && isNaN(value)) {\n      input.classList.add('border-red-500');\n      this.showError('Please enter valid numbers only');\n    } else {\n      input.classList.remove('border-red-500');\n      this.hideError();\n    }\n  }\n\n  generateRandomNumbers() {\n    const count = parseInt(this.modal.querySelector('#random-count').value);\n    const min = parseInt(this.modal.querySelector('#random-min').value);\n    const max = parseInt(this.modal.querySelector('#random-max').value);\n\n    if (min >= max) {\n      this.showError('Maximum value must be greater than minimum value');\n      return;\n    }\n\n    this.numbers = [];\n    for (let i = 0; i < count; i++) {\n      this.numbers.push(Math.floor(Math.random() * (max - min + 1)) + min);\n    }\n\n    // Don't call displayResult here anymore, let calculate() handle it\n  }\n\n  calculate() {\n    // Track calculation start time for speed achievement\n    this.calculationStartTime = window.performance.now();\n\n    const calculateBtn = this.modal.querySelector('#calculate-btn');\n\n    // Add button press animation\n    calculateBtn.classList.add('animate-button-press');\n    setTimeout(\n      () => calculateBtn.classList.remove('animate-button-press'),\n      150\n    );\n\n    // Show loading state\n    const originalText = calculateBtn.textContent;\n    calculateBtn.disabled = true;\n    calculateBtn.innerHTML = `\n      <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n        <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n      </svg>\n      Calculating...\n    `;\n\n    // Simulate brief calculation delay for better UX\n    setTimeout(() => {\n      if (this.mode === 'custom') {\n        const inputs = this.modal.querySelectorAll('.number-input');\n        this.numbers = [];\n\n        inputs.forEach(input => {\n          if (input.value.trim()) {\n            const num = parseFloat(input.value);\n            if (!isNaN(num)) {\n              this.numbers.push(num);\n            }\n          }\n        });\n\n        if (this.numbers.length < 2) {\n          calculateBtn.disabled = false;\n          calculateBtn.textContent = originalText;\n          this.showError('Please enter at least 2 numbers');\n          return;\n        }\n      } else {\n        // Random mode - generate numbers first\n        this.generateRandomNumbers();\n        // Don't return here, continue to guess check\n      }\n\n      // Check if user wants to guess (only for valid calculations)\n      if (this.numbers.length >= 2) {\n        this.checkForGuess();\n      }\n    }, 500); // Brief delay for loading effect\n  }\n\n  checkForGuess() {\n    // Calculate stats first (for the guess modal)\n    const stats = calculateAllStats(this.numbers);\n\n    // Check if challenge mode is enabled\n    const challengeEnabled =\n      this.modal.querySelector('#enable-guessing').checked;\n\n    if (challengeEnabled) {\n      // Show guess modal\n      new GuessModal(\n        this.numbers,\n        {\n          average: stats.average,\n          median: stats.median,\n          variance: stats.variance,\n          stdDev: stats.standardDeviation,\n          range: stats.range,\n        },\n        guessResults => {\n          // Process results and continue with display\n          this.processGuessResults(guessResults, stats);\n        }\n      );\n    } else {\n      // No guess, proceed normally\n      this.processGuessResults(null, stats);\n    }\n  }\n\n  processGuessResults(guessResults, stats) {\n    // Record calculation with achievement system\n    const numberCount = this.numbers.length;\n    achievementSystem.recordCalculation(this.mode, numberCount, guessResults);\n\n    // Check for speed demon achievement (if calculation took < 2 seconds)\n    const calculationTime =\n      window.performance.now() - (this.calculationStartTime || 0);\n    if (calculationTime < 2000) {\n      achievementSystem.unlockMilestone('speed_demon');\n    }\n\n    // Store results and display\n    this.result = stats.average;\n    this.allStats = stats;\n    this.displayResult();\n  }\n\n  displayResult() {\n    try {\n      // Stats already calculated in processGuessResults\n      const stats = this.allStats;\n\n      // Save to history\n      saveCalculation({\n        numbers: this.numbers,\n        results: stats,\n        inputType: this.mode,\n      });\n\n      // Hide input section\n      this.modal.querySelector('.tab-content').classList.add('hidden');\n      this.modal.querySelector('#calculate-btn').classList.add('hidden');\n\n      // Show result\n      const resultDisplay = this.modal.querySelector('#result-display');\n      resultDisplay.classList.remove('hidden');\n\n      // Always switch to Overview tab when showing new results\n      this.switchResultTab('overview');\n\n      // Show number pills\n      const pillsContainer = this.modal.querySelector('#number-pills');\n      pillsContainer.innerHTML = this.numbers\n        .map(\n          (num, index) =>\n            `<span class=\"px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full text-sm transition-colors duration-300\" role=\"listitem\" aria-label=\"Input number ${index + 1}: ${formatNumber(num)}\">${formatNumber(num)}</span>`\n        )\n        .join('');\n\n      // Populate all result values\n      this.populateResults(stats);\n\n      // Animate the main average number\n      this.animateNumber(stats.average);\n\n      // Create chart visualization (delay to ensure tab is switched)\n      setTimeout(() => {\n        this.renderChart(this.numbers, stats.average);\n      }, 100);\n\n      // Load history for history tab\n      this.loadHistory();\n\n      // Announce successful calculation to screen readers\n      this.announceToScreenReader(\n        `Calculation completed. Average is ${formatNumber(stats.average)}. Results displayed with ${this.numbers.length} numbers processed.`\n      );\n    } catch (error) {\n      this.showError(error.message);\n    }\n  }\n\n  animateNumber(target) {\n    const element = this.modal.querySelector('#result-value');\n    const duration = 1500;\n    const start = 0;\n    let startTime = null;\n\n    // Add morphing animation class\n    element.classList.add('animate-numberMorph');\n\n    const animate = timestamp => {\n      if (!startTime) startTime = timestamp;\n      const elapsed = timestamp - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n\n      // Use easing function for smoother animation\n      const easeOutQuart = 1 - Math.pow(1 - progress, 4);\n      const current = start + (target - start) * easeOutQuart;\n\n      element.textContent = current.toFixed(2);\n\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      } else {\n        element.textContent = target.toFixed(2);\n        element.classList.remove('animate-numberMorph');\n\n        // Add celebration animation\n        element.classList.add('animate-celebrate');\n        setTimeout(() => {\n          element.classList.remove('animate-celebrate');\n          this.triggerConfetti();\n        }, 600);\n      }\n    };\n\n    requestAnimationFrame(animate);\n  }\n\n  triggerConfetti() {\n    // Create confetti particles\n    const confettiCount = 50;\n    const colors = ['#059669', '#3b82f6', '#8b5cf6', '#f59e0b', '#ef4444'];\n\n    for (let i = 0; i < confettiCount; i++) {\n      const confetti = document.createElement('div');\n      confetti.className = 'confetti';\n      confetti.style.left = Math.random() * 100 + 'vw';\n      confetti.style.backgroundColor =\n        colors[Math.floor(Math.random() * colors.length)];\n      confetti.style.animationDelay = Math.random() * 2 + 's';\n      confetti.style.animationDuration = Math.random() * 2 + 2 + 's';\n\n      document.body.appendChild(confetti);\n\n      // Remove confetti after animation\n      setTimeout(() => {\n        if (confetti.parentNode) {\n          confetti.parentNode.removeChild(confetti);\n        }\n      }, 4000);\n    }\n\n    // Show signature occasionally\n    signatureManager.showSignature();\n\n    // Animate favicon during celebration\n    signatureManager.animateFavicon();\n\n    // Update achievement progress\n    const nextBadge = achievementSystem.getNextBadge();\n    if (nextBadge) {\n      signatureManager.updateAchievementProgress(nextBadge.progress);\n    }\n  }\n\n  reset() {\n    // Show input section\n    this.modal.querySelector('.tab-content').classList.remove('hidden');\n    const calculateBtn = this.modal.querySelector('#calculate-btn');\n    calculateBtn.classList.remove('hidden');\n\n    // Reset calculate button state\n    calculateBtn.disabled = false;\n    calculateBtn.textContent =\n      this.mode === 'custom'\n        ? 'Calculate Average'\n        : 'Generate & Calculate Average';\n\n    // Hide result\n    this.modal.querySelector('#result-display').classList.add('hidden');\n\n    // Don't clear the inputs - let users keep their numbers\n    // Just remove any validation errors\n    if (this.mode === 'custom') {\n      this.modal.querySelectorAll('.number-input').forEach(input => {\n        input.classList.remove('border-red-500');\n      });\n    }\n\n    // Don't reset numbers array or result here - keep them for reference\n    this.hideError();\n  }\n\n  copyResult() {\n    if (this.result !== null && this.allStats) {\n      let textToCopy = '';\n\n      // Get the current active result tab\n      const activeTab = this.modal.querySelector(\n        '.result-tab-btn[aria-selected=\"true\"]'\n      );\n      const currentTab = activeTab ? activeTab.dataset.resultTab : 'overview';\n\n      switch (currentTab) {\n        case 'overview':\n          textToCopy = `Average: ${formatNumber(this.result)}`;\n          break;\n\n        case 'statistics':\n          textToCopy = `Statistics for [${this.numbers.map(n => formatNumber(n)).join(', ')}]:\nAverage: ${formatNumber(this.allStats.average)}\nMedian: ${formatNumber(this.allStats.median)}\nVariance: ${formatNumber(this.allStats.variance)}\nRange: ${formatNumber(this.allStats.range)}\nStandard Deviation: ${formatNumber(this.allStats.standardDeviation)}\nSum: ${formatNumber(this.allStats.sum)}\nCount: ${this.allStats.count}`;\n          break;\n\n        case 'history': {\n          const history = getCalculationHistory();\n          if (history.length > 0) {\n            textToCopy = `Calculation History:\\n${history\n              .map(\n                calc =>\n                  `Numbers: [${calc.numbers.map(n => formatNumber(n)).join(', ')}] → Average: ${formatNumber(calc.results.average)} (${formatTimestamp(calc.timestamp)})`\n              )\n              .join('\\n')}`;\n          } else {\n            textToCopy = 'No calculation history available';\n          }\n          break;\n        }\n\n        default:\n          textToCopy = `Average: ${formatNumber(this.result)}`;\n      }\n\n      navigator.clipboard.writeText(textToCopy).then(() => {\n        const btn = this.modal.querySelector('#copy-result');\n        const originalText = btn.textContent;\n        btn.textContent = 'Copied!';\n        btn.classList.add('bg-green-600', 'hover:bg-green-700');\n\n        setTimeout(() => {\n          btn.textContent = originalText;\n          btn.classList.remove('bg-green-600', 'hover:bg-green-700');\n        }, 2000);\n      });\n    }\n  }\n\n  showError(message) {\n    const errorDisplay = this.modal.querySelector('#error-display');\n    const errorMessage = this.modal.querySelector('#error-message');\n    errorMessage.textContent = message;\n    errorDisplay.classList.remove('hidden');\n\n    // Announce error to screen readers\n    this.announceToScreenReader(`Error: ${message}`);\n  }\n\n  hideError() {\n    this.modal.querySelector('#error-display').classList.add('hidden');\n  }\n\n  hideResult() {\n    this.modal.querySelector('#result-display').classList.add('hidden');\n  }\n\n  switchResultTab(tab) {\n    // Update tab buttons\n    this.modal.querySelectorAll('.result-tab-btn').forEach(btn => {\n      if (btn.dataset.resultTab === tab) {\n        btn.classList.add(\n          'text-gray-700',\n          'dark:text-gray-200',\n          'border-b-2',\n          'border-blue-500',\n          'dark:border-blue-400'\n        );\n        btn.classList.remove('text-gray-500', 'dark:text-gray-400');\n        btn.setAttribute('aria-selected', 'true');\n        btn.setAttribute('tabindex', '0');\n      } else {\n        btn.classList.remove(\n          'text-gray-700',\n          'dark:text-gray-200',\n          'border-b-2',\n          'border-blue-500',\n          'dark:border-blue-400'\n        );\n        btn.classList.add('text-gray-500', 'dark:text-gray-400');\n        btn.setAttribute('aria-selected', 'false');\n        btn.setAttribute('tabindex', '-1');\n      }\n    });\n\n    // Update tab panels\n    this.modal.querySelectorAll('.result-tab-panel').forEach(panel => {\n      if (panel.id === `${tab}-tab`) {\n        panel.classList.remove('hidden');\n        panel.setAttribute('aria-hidden', 'false');\n      } else {\n        panel.classList.add('hidden');\n        panel.setAttribute('aria-hidden', 'true');\n      }\n    });\n\n    // Announce tab change for screen readers\n    this.announceToScreenReader(`Switched to ${tab} results view`);\n  }\n\n  populateResults(stats) {\n    // Overview tab\n    this.modal.querySelector('#sum-value').textContent = formatNumber(\n      stats.sum\n    );\n    this.modal.querySelector('#count-value').textContent = stats.count;\n\n    // Force update overview text colors for dark mode with a small delay\n    setTimeout(() => {\n      const isDark = document.documentElement.classList.contains('dark');\n      if (isDark) {\n        // More specific selectors for overview tab elements\n        const overviewTab = this.modal.querySelector('#overview-tab');\n        if (overviewTab) {\n          // Average label\n          const avgLabel = overviewTab.querySelector('p.text-sm');\n          if (avgLabel) {\n            avgLabel.classList.remove('text-gray-600', 'dark:text-gray-400');\n            avgLabel.classList.add('text-gray-300');\n          }\n\n          // Main average value\n          const avgValue = this.modal.querySelector('#result-value');\n          if (avgValue) {\n            avgValue.classList.remove('text-blue-600', 'dark:text-blue-400');\n            avgValue.classList.add('text-blue-300');\n          }\n\n          // Sum and Count labels and values\n          const summaryGrid = overviewTab.querySelector('.grid');\n          if (summaryGrid) {\n            const labels = summaryGrid.querySelectorAll('p.text-gray-500');\n            const values = summaryGrid.querySelectorAll('p.font-semibold');\n\n            labels.forEach(label => {\n              label.classList.remove('text-gray-500', 'dark:text-gray-400');\n              label.classList.add('text-gray-300');\n            });\n\n            values.forEach(value => {\n              value.classList.remove('text-gray-700', 'dark:text-gray-300');\n              value.classList.add('text-gray-200');\n            });\n          }\n        }\n      }\n    }, 50);\n\n    // Statistics tab - with staggered animations\n    const statElements = [\n      {\n        element: this.modal.querySelector('#median-value'),\n        value: formatNumber(stats.median),\n      },\n      {\n        element: this.modal.querySelector('#variance-value'),\n        value: formatNumber(stats.variance),\n      },\n      {\n        element: this.modal.querySelector('#range-value'),\n        value: formatNumber(stats.range),\n      },\n      {\n        element: this.modal.querySelector('#stddev-value'),\n        value: formatNumber(stats.standardDeviation),\n      },\n    ];\n\n    statElements.forEach((stat, index) => {\n      setTimeout(() => {\n        stat.element.textContent = stat.value;\n\n        // Add pulse glow effect\n        const card = stat.element.closest('.stat-card');\n        card.classList.add('animate-pulse-glow');\n\n        setTimeout(() => {\n          card.classList.remove('animate-pulse-glow');\n        }, 2000);\n      }, index * 200); // Stagger by 200ms\n    });\n  }\n\n  loadHistory() {\n    const history = getCalculationHistory();\n    const historyList = this.modal.querySelector('#history-list');\n\n    if (history.length === 0) {\n      historyList.innerHTML =\n        '<p class=\"text-gray-500 text-center py-4\">No calculations yet</p>';\n      return;\n    }\n\n    historyList.innerHTML = history\n      .map(\n        calc => `\n      <div class=\"history-item p-3 bg-gray-50 dark:bg-gray-700/70 rounded-lg cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-600/80 transition-colors duration-300\" \n           data-calculation-id=\"${calc.id}\">\n        <div class=\"flex justify-between items-start\">\n          <div class=\"flex-1\">\n            <div class=\"flex flex-wrap gap-1 mb-1\">\n              ${calc.numbers\n                .slice(0, 5)\n                .map(\n                  num =>\n                    `<span class=\"text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/70 text-blue-600 dark:text-blue-200 rounded transition-colors duration-300\">${formatNumber(num)}</span>`\n                )\n                .join('')}\n              ${calc.numbers.length > 5 ? `<span class=\"text-xs text-gray-500 dark:text-gray-300 transition-colors duration-300\">+${calc.numbers.length - 5} more</span>` : ''}\n            </div>\n            <p class=\"text-sm font-medium text-gray-700 dark:text-gray-100 transition-colors duration-300\">Avg: ${formatNumber(calc.results.average)}</p>\n          </div>\n          <div class=\"text-right\">\n            <p class=\"text-xs text-gray-500 dark:text-gray-300 transition-colors duration-300\">${formatTimestamp(calc.timestamp)}</p>\n            <p class=\"text-xs text-gray-400 dark:text-gray-400 capitalize transition-colors duration-300\">${calc.inputType}</p>\n          </div>\n        </div>\n      </div>\n    `\n      )\n      .join('');\n\n    // Add click handlers for history items\n    historyList.addEventListener('click', e => {\n      const historyItem = e.target.closest('.history-item');\n      if (historyItem) {\n        const calcId = parseInt(historyItem.dataset.calculationId);\n        this.loadFromHistory(calcId);\n      }\n    });\n  }\n\n  loadFromHistory(calcId) {\n    const history = getCalculationHistory();\n    const calculation = history.find(calc => calc.id === calcId);\n\n    if (!calculation) return;\n\n    // Set the numbers and mode\n    this.numbers = [...calculation.numbers];\n    this.mode = calculation.inputType;\n    this.allStats = calculation.results;\n    this.result = calculation.results.average;\n\n    // Update the display\n    this.populateResults(calculation.results);\n\n    // Update number pills\n    const pillsContainer = this.modal.querySelector('#number-pills');\n    pillsContainer.innerHTML = this.numbers\n      .map(\n        num =>\n          `<span class=\"px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full text-sm\">${formatNumber(num)}</span>`\n      )\n      .join('');\n\n    // Update main average display\n    this.modal.querySelector('#result-value').textContent = formatNumber(\n      calculation.results.average\n    );\n\n    // Re-render chart\n    this.renderChart(this.numbers, calculation.results.average);\n\n    // Switch to overview tab\n    this.switchResultTab('overview');\n  }\n\n  clearHistory() {\n    if (confirm('Are you sure you want to clear all calculation history?')) {\n      const success = getCalculationHistory().length > 0;\n      if (success) {\n        localStorage.removeItem('meanmachine_calculations');\n        this.loadHistory();\n      }\n    }\n  }\n\n  showTooltip(trigger, text) {\n    const tooltip = this.modal.querySelector('#tooltip');\n    tooltip.textContent = text;\n    tooltip.classList.remove('hidden');\n    tooltip.classList.add('animate-tooltip-appear');\n\n    const rect = trigger.getBoundingClientRect();\n    const modalRect = this.modal.getBoundingClientRect();\n\n    tooltip.style.left = `${rect.left - modalRect.left + rect.width / 2}px`;\n    tooltip.style.top = `${rect.top - modalRect.top - tooltip.offsetHeight - 5}px`;\n    tooltip.style.transform = 'translateX(-50%)';\n  }\n\n  hideTooltip() {\n    const tooltip = this.modal.querySelector('#tooltip');\n    tooltip.classList.remove('animate-tooltip-appear');\n    tooltip.classList.add('hidden');\n  }\n\n  renderChart(numbers, average) {\n    const chartContainer = this.modal.querySelector('#chart-container');\n\n    if (!chartContainer) {\n      console.warn('Chart container not found');\n      return;\n    }\n\n    // Clear previous chart\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = null;\n    }\n\n    // Ensure we're on the overview tab or wait for it\n    const overviewTab = this.modal.querySelector('#overview-tab');\n    if (!overviewTab || overviewTab.classList.contains('hidden')) {\n      // Wait a bit longer if not on overview tab\n      setTimeout(() => this.renderChart(numbers, average), 200);\n      return;\n    }\n\n    // Create new chart with responsive sizing\n    const containerRect = chartContainer.getBoundingClientRect();\n    const containerWidth = Math.min(\n      400,\n      Math.max(300, containerRect.width - 20)\n    );\n    const isDark = document.documentElement.classList.contains('dark');\n\n    this.chart = new Chart(chartContainer, {\n      width: containerWidth,\n      height: 200,\n      barColor: isDark ? '#60a5fa' : '#3b82f6', // Blue for bars\n      averageLineColor: isDark ? '#f87171' : '#ef4444', // Red for average line\n      animationDuration: 1000,\n    });\n\n    // Render the chart\n    try {\n      this.chart.render(numbers, average);\n    } catch (error) {\n      console.error('Chart rendering error:', error);\n    }\n  }\n\n  /**\n   * Handle keyboard navigation for tab interfaces\n   * @param {KeyboardEvent} e - Keyboard event\n   * @param {string} tabType - Type of tab navigation ('tab-btn' or 'result-tab-btn')\n   */\n  handleTabKeyNavigation(e, tabType) {\n    const tabs = Array.from(this.modal.querySelectorAll(`.${tabType}`));\n    const currentIndex = tabs.findIndex(tab => tab === e.target);\n\n    let nextIndex;\n\n    switch (e.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        e.preventDefault();\n        nextIndex = currentIndex > 0 ? currentIndex - 1 : tabs.length - 1;\n        tabs[nextIndex].focus();\n        tabs[nextIndex].click();\n        break;\n\n      case 'ArrowRight':\n      case 'ArrowDown':\n        e.preventDefault();\n        nextIndex = currentIndex < tabs.length - 1 ? currentIndex + 1 : 0;\n        tabs[nextIndex].focus();\n        tabs[nextIndex].click();\n        break;\n\n      case 'Home':\n        e.preventDefault();\n        tabs[0].focus();\n        tabs[0].click();\n        break;\n\n      case 'End':\n        e.preventDefault();\n        tabs[tabs.length - 1].focus();\n        tabs[tabs.length - 1].click();\n        break;\n\n      case 'Enter':\n      case ' ':\n        e.preventDefault();\n        e.target.click();\n        break;\n    }\n  }\n\n  /**\n   * Announce message to screen readers using aria-live region\n   * @param {string} message - Message to announce\n   */\n  announceToScreenReader(message) {\n    let announcer = document.getElementById('screen-reader-announcer');\n    if (!announcer) {\n      announcer = document.createElement('div');\n      announcer.id = 'screen-reader-announcer';\n      announcer.setAttribute('aria-live', 'polite');\n      announcer.setAttribute('aria-atomic', 'true');\n      announcer.className = 'sr-only';\n      document.body.appendChild(announcer);\n    }\n\n    // Clear and set new message\n    announcer.textContent = '';\n    setTimeout(() => {\n      announcer.textContent = message;\n    }, 100);\n  }\n}\n"],"names":["Modal","options","arguments","length","undefined","_classCallCheck","this","_objectSpread","closeOnBackdrop","closeOnEscape","focusTrap","animationDuration","isOpen","previousActiveElement","firstFocusableElement","lastFocusableElement","init","key","value","backdrop","document","createElement","className","container","modal","setAttribute","appendChild","body","setupEventListeners","_this","addEventListener","close","e","target","handleTabKey","focusableElements","querySelectorAll","shiftKey","activeElement","preventDefault","focus","content","innerHTML","HTMLElement","_this2","classList","remove","offsetHeight","requestAnimationFrame","add","setTimeout","style","overflow","_this3","calculateMedian","numbers","sorted","_toConsumableArray","sort","a","b","middle","Math","floor","calculateVariance","mean","reduce","sum","num","map","pow","diff","calculateRange","min","apply","max","calculateStandardDeviation","sqrt","calculateSum","calculateCount","formatNumber","decimals","toString","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","STORAGE_KEY","getCalculationHistory","stored","localStorage","getItem","JSON","parse","error","console","formatTimestamp","timestamp","date","Date","now","diffInMinutes","concat","toLocaleDateString","Chart","width","height","margin","top","right","bottom","left","barColor","averageLineColor","svg","data","average","index","createSVG","maxValue","yMax","yScale","chartHeight","xScale","barWidth","drawAxes","drawBars","drawAverageLine","drawLabels","createElementNS","defs","contains","id","colors","forEach","config","gradient","stop1","stop2","yMin","g","yAxis","xAxis","i","y","label","textContent","toFixed","gridLine","chartWidth","item","x","bar","gradientId","transition","line","fill","_this4","GuessModal","actualValues","onComplete","guesses","results","statsToGuess","icon","create","formatNumbers","createGuessInputs","addStyles","attachEventListeners","_this$modal$querySele","querySelector","n","join","stat","head","styleElement","submitGuesses","input","validateInput","parseFloat","dataset","feedback","isNaN","inputs","hasGuesses","actual","accuracy","abs","push","guess","points","achievementSystem","calculatePoints","showFeedback","borderColor","submitted","closingStyle","signatureManager","SignatureManager","showCount","link","rel","href","addEasterEggHint","setupFaviconAnimation","setupAchievementProgress","signature","hint","title","_document$querySelect","originalFavicon","animatedFavicon","createAnimatedFavicon","canvas","ctx","getContext","progress","clearRect","fillStyle","fillRect","font","textAlign","textBaseline","fillText","toDataURL","duration","favicon","startTime","animate","elapsed","progressBar","progressBarInner","clearTimeout","progressTimeout","get404Styles","CalculatorModal","_Modal","calculateFunction","_callSuper","mode","result","chart","render","_inherits","createNumberInput","setContent","btn","switchTab","tab","handleTabKeyNavigation","addNumberInput","clearAllInputs","calculate","randomCount","countDisplay","switchResultTab","resultTab","reset","copyResult","clearHistory","showTooltip","tooltip","hideTooltip","closest","removeNumberInput","tabContent","customTab","randomTab","announceToScreenReader","calculateBtn","hideError","hideResult","inputCount","showError","div","firstElementChild","lastElementChild","inputGroup","group","count","parseInt","random","calculationStartTime","window","performance","originalText","disabled","trim","generateRandomNumbers","checkForGuess","stats","median","variance","range","standardDeviation","checked","stdDev","guessResults","processGuessResults","numberCount","recordCalculation","unlockMilestone","allStats","displayResult","_this5","calculationData","history","newCalculation","toISOString","inputType","unshift","splice","setItem","stringify","saveCalculation","populateResults","animateNumber","renderChart","loadHistory","message","_this6","element","easeOutQuart","current","triggerConfetti","_loop","confetti","backgroundColor","animationDelay","parentNode","removeChild","showSignature","animateFavicon","nextBadge","getNextBadge","updateAchievementProgress","_this7","textToCopy","activeTab","calc","navigator","clipboard","writeText","then","errorDisplay","panel","_this8","documentElement","overviewTab","avgLabel","avgValue","summaryGrid","labels","values","card","_this9","historyList","slice","historyItem","calcId","calculationId","loadFromHistory","calculation","find","confirm","removeItem","trigger","text","rect","getBoundingClientRect","modalRect","transform","_this0","chartContainer","destroy","containerRect","containerWidth","isDark","warn","tabType","nextIndex","tabs","Array","from","currentIndex","findIndex","click","announcer","getElementById"],"sourceRoot":""}