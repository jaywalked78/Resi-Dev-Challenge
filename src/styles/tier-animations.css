/**
 * Minimal CSS for Complex Tier Effects That Can't Be Done with Tailwind
 * This file contains only the animations and effects that require complex selectors
 * or pseudo-elements that Tailwind can't handle efficiently
 */

/* 
 * Tier-based average text colors with brightness overlays
 * 
 * WHY CSS INSTEAD OF TAILWIND:
 * - Requires dynamic tier-based conditional styling with complex selectors (.tier-bronze .tier-average-text)
 * - Uses CSS background-clip: text which isn't available in Tailwind's utility classes
 * - Requires webkit-specific prefixes (-webkit-background-clip, -webkit-text-fill-color)
 * - Filter brightness() adjustments with precise tier-specific values aren't efficiently achievable with Tailwind
 * - Complex conditional styling based on parent tier classes would require excessive arbitrary Tailwind classes
 * 
 * ENTERPRISE JUSTIFICATION:
 * This CSS provides tier-specific text color treatments that would require 10+ arbitrary Tailwind classes
 * per tier, making the HTML unreadable and unmaintainable. The CSS approach centralizes the tier logic
 * and provides better performance with native CSS selectors.
 */

/* Light mode: tier color with 20% black overlay (brightness 0.8) */
.tier-average-text {
  color: #3b82f6; /* Default blue */
}

.tier-bronze .tier-average-text {
  background: linear-gradient(to bottom, #cd7f32, #cd7f32);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  filter: brightness(0.8);
}

.tier-silver .tier-average-text {
  background: linear-gradient(to bottom, #c0c0c0, #c0c0c0);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  filter: brightness(0.8);
}

.tier-gold .tier-average-text {
  background: linear-gradient(to bottom, #daa520, #daa520);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  filter: brightness(0.8);
}

.tier-platinum .tier-average-text {
  background: linear-gradient(to bottom, #e5e7eb, #e5e7eb);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  filter: brightness(0.8);
}

.tier-diamond .tier-average-text {
  background: linear-gradient(45deg, #ff0080, #00ffff, #ffff00, #ff0080);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  filter: brightness(0.8);
}

/* Dark mode: tier color with 35% white overlay */
.dark .tier-bronze .tier-average-text {
  background: linear-gradient(to bottom, #cd7f32, #cd7f32);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  filter: brightness(1.35);
}

.dark .tier-silver .tier-average-text {
  background: linear-gradient(to bottom, #c0c0c0, #c0c0c0);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  filter: brightness(1.35);
}

.dark .tier-gold .tier-average-text {
  background: linear-gradient(to bottom, #daa520, #daa520);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  filter: brightness(1.35);
}

.dark .tier-platinum .tier-average-text {
  background: linear-gradient(to bottom, #e5e7eb, #e5e7eb);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  filter: brightness(1.35);
}

.dark .tier-diamond .tier-average-text {
  background: linear-gradient(45deg, #ff0080, #00ffff, #ffff00, #ff0080);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  filter: brightness(1.35);
}

/* Platinum tier sophisticated glassmorphism overlay for main content */
.tier-platinum .main-content-section {
  /* 
   * WHY CSS INSTEAD OF TAILWIND:
   * - Complex glassmorphism requires multiple pseudo-elements with precise layering
   * - backdrop-filter and advanced blur effects aren't efficiently achievable with Tailwind utilities
   * - Sophisticated animation timing and easing requires CSS keyframes with multiple properties
   * - Multiple overlapping gradients with different animation cycles need native CSS control
   */
  position: relative;
  overflow: hidden;
  backdrop-filter: blur(1px);
}

/* Primary rotating rectangle with gradient shimmer */
.tier-platinum .main-content-section::before {
  content: '';
  position: absolute;
  inset: 0;
  background: conic-gradient(
    from 0deg,
    transparent,
    rgba(173, 216, 230, 0.265),
    rgba(255, 255, 255, 0.325),
    rgba(72, 187, 187, 0.282),
    transparent
  );
  animation: rotate 8s linear infinite;
  pointer-events: none;
  border-radius: inherit;
  z-index: 1;
  filter: blur(50px);
}

/* Secondary overlay - subtle shimmer sweep */
.tier-platinum .main-content-section::after {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    135deg,
    transparent 0%,
    transparent 20%,
    rgba(173, 216, 230, 0.08) 40%,
    rgba(72, 187, 187, 0.12) 50%,
    rgba(173, 216, 230, 0.08) 60%,
    transparent 80%,
    transparent 100%
  );
  background-size: 300% 300%;
  animation: platinumShimmer 8s ease-in-out infinite;
  pointer-events: none;
  border-radius: inherit;
  z-index: 2;
  filter: blur(20px);
}

/* Diamond tier animated border for main content */
.tier-diamond .main-content-section {
  /* 
   * WHY CSS INSTEAD OF TAILWIND:
   * - overflow: hidden with position: relative creates proper containment for animated pseudo-elements
   * - Complex stacking context management for ::before and ::after pseudo-elements
   * - Prevents layout shifts from rotating/animated overlays extending beyond container bounds
   */
  position: relative;
  overflow: hidden;
}

.tier-diamond .main-content-section::before {
  content: '';
  position: absolute;
  inset: -2px;
  background: linear-gradient(45deg, #ff0080, #00ffff, #ffff00, #ff0080);
  background-size: 300% 300%;
  animation: diamondContentBorder 4s ease-in-out infinite;
  z-index: -1;
  border-radius: inherit;
}

/* Diamond tier prism effect for main content */
.tier-diamond .main-content-section::after {
  content: '';
  position: absolute;
  inset: 0;
  background: conic-gradient(
    from 0deg,
    transparent,
    rgba(255, 0, 128, 0.05),
    transparent,
    rgba(0, 255, 255, 0.05),
    transparent
  );
  animation: rotate 6s linear infinite;
  pointer-events: none;
  border-radius: inherit;
  z-index: 1;
}

/* Ensure main content children are above overlays */
.tier-platinum .main-content-section > *,
.tier-diamond .main-content-section > * {
  position: relative;
  z-index: 2;
}

/* Keyframe animations */
@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes platinumShimmer {
  0%,
  100% {
    background-position: -300% -300%;
    opacity: 0.4;
  }
  50% {
    background-position: 300% 300%;
    opacity: 0.6;
  }
}

@keyframes diamondContentBorder {
  0%,
  100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

/* Diamond tier feature card gradient borders (only when complex borders are needed) */
.tier-diamond .feature-card::before {
  content: '';
  position: absolute;
  inset: -1px;
  background: linear-gradient(45deg, #ff0080, #00ffff, #ffff00, #ff0080);
  background-size: 300% 300%;
  animation: diamondContentBorder 4s ease-in-out infinite;
  z-index: -1;
  border-radius: inherit;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.tier-diamond .feature-card:hover::before {
  opacity: 1;
}

/* Diamond tier modal with glassmorphism effect */
.tier-diamond .modal {
  /* 
   * WHY CSS INSTEAD OF TAILWIND:
   * - Complex glassmorphism effects require multiple CSS properties
   * - Backdrop filters and advanced blur effects for premium visual treatment
   * - Layered backgrounds with transparency and blur for depth
   * - Enterprise Diamond tier requires sophisticated visual styling
   * - Light mode requires white overlay instead of dark overlay for better visibility
   */
  background: rgba(
    255,
    255,
    255,
    0.35
  ) !important; /* Light mode: 35% white overlay */
  backdrop-filter: blur(20px) saturate(1.2) !important;
  border: 1px solid rgba(0, 0, 0, 0.18) !important; /* Dark border for light mode */
  box-shadow:
    0 8px 32px rgba(0, 0, 0, 0.1),
    inset 0 1px 0 rgba(0, 0, 0, 0.1),
    0 0 0 1px rgba(0, 0, 0, 0.05) !important;
  animation: none !important;
}

.tier-diamond .modal::before,
.tier-diamond .modal::after {
  display: none !important;
}

.dark .tier-diamond .modal {
  background: rgba(
    55,
    65,
    81,
    0.9
  ) !important; /* Slightly more opaque in dark mode */
  backdrop-filter: blur(20px) saturate(1.2) !important;
  border: 1px solid rgba(255, 255, 255, 0.12) !important;
  box-shadow:
    0 8px 32px rgba(0, 0, 0, 0.5),
    inset 0 1px 0 rgba(255, 255, 255, 0.08),
    0 0 0 1px rgba(255, 255, 255, 0.03) !important;
  animation: none !important;
}

/* Ensure modal content is above the overlay */
.tier-diamond .modal > * {
  position: relative;
  z-index: 3;
}

/* Diamond tier input fields with animated gradient backgrounds and pulsating effect */
.tier-diamond .number-input {
  /* 
   * WHY CSS INSTEAD OF TAILWIND:
   * - Complex animated gradient backgrounds with glassmorphic effects
   * - Multiple background layers, backdrop filters, and animation timing
   * - Precise color management with dark text for readability against bright gradients
   * - Enterprise requirement for consistent diamond tier animated styling with premium glass effects
   */
  position: relative;
  overflow: hidden;
  border: 2px solid rgba(255, 255, 255, 0.8);
  background: linear-gradient(45deg, #ff0080, #00ffff, #ffff00, #ff0080);
  background-size: 300% 300%;
  animation:
    diamondContentBorder 4s ease-in-out infinite,
    pulse-glow 2s ease-in-out infinite;
  color: #1f2937 !important;
  font-weight: 600;
  backdrop-filter: blur(10px);
  box-shadow:
    inset 0 1px 0 rgba(255, 255, 255, 0.4),
    0 4px 8px rgba(0, 0, 0, 0.1);
}

.tier-diamond .number-input::placeholder {
  color: rgba(31, 41, 55, 0.7) !important;
  font-weight: 500;
  text-shadow: none;
}

.tier-diamond .number-input::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.1) 0%,
    rgba(255, 255, 255, 0.05) 50%,
    rgba(255, 255, 255, 0.1) 100%
  );
  pointer-events: none;
  border-radius: inherit;
  z-index: 1;
}

.tier-diamond .number-input:focus {
  animation:
    diamondContentBorder 2s ease-in-out infinite,
    pulse-glow 1s ease-in-out infinite;
  box-shadow: 0 0 20px rgba(255, 0, 128, 0.5);
}

/* Dark mode input field styling for diamond tier */
.dark .tier-diamond .number-input {
  color: #1f2937 !important;
  border: 2px solid rgba(0, 0, 0, 0.8);
  box-shadow:
    inset 0 1px 0 rgba(255, 255, 255, 0.2),
    0 4px 8px rgba(0, 0, 0, 0.3);
}

/* Range input styling for diamond tier */
.tier-diamond #random-count {
  position: relative;
  background: linear-gradient(45deg, #ff0080, #00ffff, #ffff00, #ff0080);
  background-size: 300% 300%;
  animation: diamondContentBorder 4s ease-in-out infinite;
  border-radius: 8px;
  height: 12px;
  border: 1px solid rgba(255, 255, 255, 0.8); /* Light border for light mode */
}

.dark .tier-diamond #random-count {
  border: 1px solid rgba(0, 0, 0, 0.8); /* Dark border for dark mode */
}

.tier-diamond #random-count::-webkit-slider-thumb {
  background: linear-gradient(45deg, #ff0080, #00ffff, #ffff00);
  border: none;
  border-radius: 50%;
  width: 20px;
  height: 20px;
  cursor: pointer;
  animation: pulse-glow 2s ease-in-out infinite;
}

.tier-diamond #random-count::-moz-range-thumb {
  background: linear-gradient(45deg, #ff0080, #00ffff, #ffff00);
  border: none;
  border-radius: 50%;
  width: 20px;
  height: 20px;
  cursor: pointer;
  animation: pulse-glow 2s ease-in-out infinite;
}

/* Min/Max number inputs for diamond tier */
.tier-diamond #random-min,
.tier-diamond #random-max {
  position: relative;
  overflow: hidden;
  border: 2px solid rgba(255, 255, 255, 0.8);
  background: linear-gradient(45deg, #ff0080, #00ffff, #ffff00, #ff0080);
  background-size: 300% 300%;
  animation:
    diamondContentBorder 4s ease-in-out infinite,
    pulse-glow 2s ease-in-out infinite;
  color: #1f2937 !important;
  font-weight: 600;
  backdrop-filter: blur(10px);
  box-shadow:
    inset 0 1px 0 rgba(255, 255, 255, 0.4),
    0 4px 8px rgba(0, 0, 0, 0.1);
}

.tier-diamond #random-min::placeholder,
.tier-diamond #random-max::placeholder {
  color: rgba(31, 41, 55, 0.7) !important;
  font-weight: 500;
  text-shadow: none;
}

.tier-diamond #random-min::before,
.tier-diamond #random-max::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.1) 0%,
    rgba(255, 255, 255, 0.05) 50%,
    rgba(255, 255, 255, 0.1) 100%
  );
  pointer-events: none;
  border-radius: inherit;
  z-index: 1;
}

.dark .tier-diamond #random-min,
.dark .tier-diamond #random-max {
  color: #1f2937 !important;
  border: 2px solid rgba(0, 0, 0, 0.8);
  box-shadow:
    inset 0 1px 0 rgba(255, 255, 255, 0.2),
    0 4px 8px rgba(0, 0, 0, 0.3);
}
